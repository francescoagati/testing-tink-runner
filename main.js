// Generated by Haxe 4.0.0-rc.2+77068e10c
(function ($global) { "use strict";
var $estr = function() { return js_Boot.__string_rec(this,''); },$hxEnums = $hxEnums || {},$_;
function $extend(from, fields) {
	var proto = Object.create(from);
	for (var name in fields) proto[name] = fields[name];
	if( fields.toString !== Object.prototype.toString ) proto.toString = fields.toString;
	return proto;
}
var Attribute = $hxEnums["Attribute"] = { __ename__ : true, __constructs__ : ["Off","Bold","Underline","Blink","ReverseVideo","Concealed","BoldOff","UnderlineOff","BlinkOff","NormalVideo","ConcealedOff","Black","Red","Green","Yellow","Blue","Magenta","Cyan","White","DefaultForeground","BlackBack","RedBack","GreenBack","YellowBack","BlueBack","MagentaBack","CyanBack","WhiteBack","DefaultBackground"]
	,Off: {_hx_index:0,__enum__:"Attribute",toString:$estr}
	,Bold: {_hx_index:1,__enum__:"Attribute",toString:$estr}
	,Underline: {_hx_index:2,__enum__:"Attribute",toString:$estr}
	,Blink: {_hx_index:3,__enum__:"Attribute",toString:$estr}
	,ReverseVideo: {_hx_index:4,__enum__:"Attribute",toString:$estr}
	,Concealed: {_hx_index:5,__enum__:"Attribute",toString:$estr}
	,BoldOff: {_hx_index:6,__enum__:"Attribute",toString:$estr}
	,UnderlineOff: {_hx_index:7,__enum__:"Attribute",toString:$estr}
	,BlinkOff: {_hx_index:8,__enum__:"Attribute",toString:$estr}
	,NormalVideo: {_hx_index:9,__enum__:"Attribute",toString:$estr}
	,ConcealedOff: {_hx_index:10,__enum__:"Attribute",toString:$estr}
	,Black: {_hx_index:11,__enum__:"Attribute",toString:$estr}
	,Red: {_hx_index:12,__enum__:"Attribute",toString:$estr}
	,Green: {_hx_index:13,__enum__:"Attribute",toString:$estr}
	,Yellow: {_hx_index:14,__enum__:"Attribute",toString:$estr}
	,Blue: {_hx_index:15,__enum__:"Attribute",toString:$estr}
	,Magenta: {_hx_index:16,__enum__:"Attribute",toString:$estr}
	,Cyan: {_hx_index:17,__enum__:"Attribute",toString:$estr}
	,White: {_hx_index:18,__enum__:"Attribute",toString:$estr}
	,DefaultForeground: {_hx_index:19,__enum__:"Attribute",toString:$estr}
	,BlackBack: {_hx_index:20,__enum__:"Attribute",toString:$estr}
	,RedBack: {_hx_index:21,__enum__:"Attribute",toString:$estr}
	,GreenBack: {_hx_index:22,__enum__:"Attribute",toString:$estr}
	,YellowBack: {_hx_index:23,__enum__:"Attribute",toString:$estr}
	,BlueBack: {_hx_index:24,__enum__:"Attribute",toString:$estr}
	,MagentaBack: {_hx_index:25,__enum__:"Attribute",toString:$estr}
	,CyanBack: {_hx_index:26,__enum__:"Attribute",toString:$estr}
	,WhiteBack: {_hx_index:27,__enum__:"Attribute",toString:$estr}
	,DefaultBackground: {_hx_index:28,__enum__:"Attribute",toString:$estr}
};
var Reflect = function() { };
Reflect.__name__ = "Reflect";
Reflect.field = function(o,field) {
	try {
		return o[field];
	} catch( e ) {
		haxe_CallStack.lastException = e;
		return null;
	}
};
Reflect.fields = function(o) {
	var a = [];
	if(o != null) {
		var hasOwnProperty = Object.prototype.hasOwnProperty;
		for( var f in o ) {
		if(f != "__id__" && f != "hx__closures__" && hasOwnProperty.call(o,f)) {
			a.push(f);
		}
		}
	}
	return a;
};
Reflect.compare = function(a,b) {
	if(a == b) {
		return 0;
	} else if(a > b) {
		return 1;
	} else {
		return -1;
	}
};
Reflect.isObject = function(v) {
	if(v == null) {
		return false;
	}
	var t = typeof(v);
	if(!(t == "string" || t == "object" && v.__enum__ == null)) {
		if(t == "function") {
			return (v.__name__ || v.__ename__) != null;
		} else {
			return false;
		}
	} else {
		return true;
	}
};
Reflect.isEnumValue = function(v) {
	if(v != null) {
		return v.__enum__ != null;
	} else {
		return false;
	}
};
Reflect.makeVarArgs = function(f) {
	return function() {
		var a = Array.prototype.slice.call(arguments);
		return f(a);
	};
};
var js_Boot = function() { };
js_Boot.__name__ = "js.Boot";
js_Boot.getClass = function(o) {
	if(((o) instanceof Array) && o.__enum__ == null) {
		return Array;
	} else {
		var cl = o.__class__;
		if(cl != null) {
			return cl;
		}
		var name = js_Boot.__nativeClassName(o);
		if(name != null) {
			return js_Boot.__resolveNativeClass(name);
		}
		return null;
	}
};
js_Boot.__string_rec = function(o,s) {
	if(o == null) {
		return "null";
	}
	if(s.length >= 5) {
		return "<...>";
	}
	var t = typeof(o);
	if(t == "function" && (o.__name__ || o.__ename__)) {
		t = "object";
	}
	switch(t) {
	case "function":
		return "<function>";
	case "object":
		if(o.__enum__) {
			var e = $hxEnums[o.__enum__];
			var n = e.__constructs__[o._hx_index];
			var con = e[n];
			if(con.__params__) {
				s += "\t";
				var tmp = n + "(";
				var _g = [];
				var _g1 = 0;
				var _g2 = con.__params__;
				while(_g1 < _g2.length) {
					var p = _g2[_g1];
					++_g1;
					_g.push(js_Boot.__string_rec(o[p],s));
				}
				return tmp + _g.join(",") + ")";
			} else {
				return n;
			}
		}
		if(((o) instanceof Array)) {
			var l = o.length;
			var i;
			var str = "[";
			s += "\t";
			var _g3 = 0;
			var _g11 = l;
			while(_g3 < _g11) {
				var i1 = _g3++;
				str += (i1 > 0 ? "," : "") + js_Boot.__string_rec(o[i1],s);
			}
			str += "]";
			return str;
		}
		var tostr;
		try {
			tostr = o.toString;
		} catch( e1 ) {
			haxe_CallStack.lastException = e1;
			var e2 = ((e1) instanceof js__$Boot_HaxeError) ? e1.val : e1;
			return "???";
		}
		if(tostr != null && tostr != Object.toString && typeof(tostr) == "function") {
			var s2 = o.toString();
			if(s2 != "[object Object]") {
				return s2;
			}
		}
		var k = null;
		var str1 = "{\n";
		s += "\t";
		var hasp = o.hasOwnProperty != null;
		for( var k in o ) {
		if(hasp && !o.hasOwnProperty(k)) {
			continue;
		}
		if(k == "prototype" || k == "__class__" || k == "__super__" || k == "__interfaces__" || k == "__properties__") {
			continue;
		}
		if(str1.length != 2) {
			str1 += ", \n";
		}
		str1 += s + k + " : " + js_Boot.__string_rec(o[k],s);
		}
		s = s.substring(1);
		str1 += "\n" + s + "}";
		return str1;
	case "string":
		return o;
	default:
		return String(o);
	}
};
js_Boot.__interfLoop = function(cc,cl) {
	if(cc == null) {
		return false;
	}
	if(cc == cl) {
		return true;
	}
	if(Object.prototype.hasOwnProperty.call(cc,"__interfaces__")) {
		var intf = cc.__interfaces__;
		var _g = 0;
		var _g1 = intf.length;
		while(_g < _g1) {
			var i = intf[_g++];
			if(i == cl || js_Boot.__interfLoop(i,cl)) {
				return true;
			}
		}
	}
	return js_Boot.__interfLoop(cc.__super__,cl);
};
js_Boot.__instanceof = function(o,cl) {
	if(cl == null) {
		return false;
	}
	switch(cl) {
	case Array:
		return ((o) instanceof Array);
	case Bool:
		return typeof(o) == "boolean";
	case Dynamic:
		return o != null;
	case Float:
		return typeof(o) == "number";
	case Int:
		if(typeof(o) == "number") {
			return ((o | 0) === o);
		} else {
			return false;
		}
		break;
	case String:
		return typeof(o) == "string";
	default:
		if(o != null) {
			if(typeof(cl) == "function") {
				if(((o) instanceof cl)) {
					return true;
				}
				if(js_Boot.__interfLoop(js_Boot.getClass(o),cl)) {
					return true;
				}
			} else if(typeof(cl) == "object" && js_Boot.__isNativeObj(cl)) {
				if(((o) instanceof cl)) {
					return true;
				}
			}
		} else {
			return false;
		}
		if(cl == Class ? o.__name__ != null : false) {
			return true;
		}
		if(cl == Enum ? o.__ename__ != null : false) {
			return true;
		}
		if(o.__enum__ != null) {
			return $hxEnums[o.__enum__] == cl;
		} else {
			return false;
		}
	}
};
js_Boot.__cast = function(o,t) {
	if(o == null || js_Boot.__instanceof(o,t)) {
		return o;
	} else {
		throw new js__$Boot_HaxeError("Cannot cast " + Std.string(o) + " to " + Std.string(t));
	}
};
js_Boot.__nativeClassName = function(o) {
	var name = js_Boot.__toStr.call(o).slice(8,-1);
	if(name == "Object" || name == "Function" || name == "Math" || name == "JSON") {
		return null;
	}
	return name;
};
js_Boot.__isNativeObj = function(o) {
	return js_Boot.__nativeClassName(o) != null;
};
js_Boot.__resolveNativeClass = function(name) {
	return $global[name];
};
var Std = function() { };
Std.__name__ = "Std";
Std.string = function(s) {
	return js_Boot.__string_rec(s,"");
};
Std.parseInt = function(x) {
	var v = parseInt(x, x && x[0]=="0" && (x[1]=="x" || x[1]=="X") ? 16 : 10);
	if(isNaN(v)) {
		return null;
	}
	return v;
};
var ANSI = function() { };
ANSI.__name__ = "ANSI";
ANSI.aset = function(attributes) {
	if(ANSI.strip || ANSI.stripIfUnavailable && !ANSI.available) {
		return "";
	}
	var tmp = "\x1B" + "[";
	var _g = [];
	var _g1 = 0;
	while(_g1 < attributes.length) {
		var arg = attributes[_g1];
		++_g1;
		if(!js_Boot.__instanceof(arg,Attribute)) {
			throw new js__$Boot_HaxeError("Set argument is not an Attribute: " + Std.string(arg));
		}
		_g.push(ANSI.values.get(arg));
	}
	return tmp + _g.join(";") + "m";
};
ANSI.detectSupport = function() {
	return false;
};
ANSI.title = function(str) {
	if(ANSI.strip || ANSI.stripIfUnavailable && !ANSI.available) {
		return "";
	}
	return "\x1B" + "]0;" + str + "\x07";
};
ANSI.showCursor = function() {
	if(ANSI.strip || ANSI.stripIfUnavailable && !ANSI.available) {
		return "";
	}
	return "\x1B[?25h";
};
ANSI.setY = function(num) {
	if(num == null) {
		num = 1;
	}
	if(ANSI.strip || ANSI.stripIfUnavailable && !ANSI.available) {
		return "";
	}
	return "\x1B[" + num + "d";
};
ANSI.setXY = function(column,line) {
	if(ANSI.strip || ANSI.stripIfUnavailable && !ANSI.available) {
		return "";
	}
	return "\x1B[" + line + ";" + column + "H";
};
ANSI.setX = function(num) {
	if(num == null) {
		num = 1;
	}
	if(ANSI.strip || ANSI.stripIfUnavailable && !ANSI.available) {
		return "";
	}
	return "\x1B[" + num + "G";
};
ANSI.saveCursor = function() {
	if(ANSI.strip || ANSI.stripIfUnavailable && !ANSI.available) {
		return "";
	}
	return "\x1B[s";
};
ANSI.resetY = function(num) {
	if(num == null) {
		num = 1;
	}
	if(ANSI.strip || ANSI.stripIfUnavailable && !ANSI.available) {
		return "";
	}
	return "\x1B[" + num + "H";
};
ANSI.reset = function() {
	if(ANSI.strip || ANSI.stripIfUnavailable && !ANSI.available) {
		return "";
	}
	return "\x1B[H";
};
ANSI.moveUpReset = function(num) {
	if(num == null) {
		num = 1;
	}
	if(ANSI.strip || ANSI.stripIfUnavailable && !ANSI.available) {
		return "";
	}
	return "\x1B[" + num + "F";
};
ANSI.moveUp = function(num) {
	if(num == null) {
		num = 1;
	}
	if(ANSI.strip || ANSI.stripIfUnavailable && !ANSI.available) {
		return "";
	}
	return "\x1B[" + num + "A";
};
ANSI.moveRight = function(num) {
	if(num == null) {
		num = 1;
	}
	if(ANSI.strip || ANSI.stripIfUnavailable && !ANSI.available) {
		return "";
	}
	return "\x1B[" + num + "C";
};
ANSI.moveLeft = function(num) {
	if(num == null) {
		num = 1;
	}
	if(ANSI.strip || ANSI.stripIfUnavailable && !ANSI.available) {
		return "";
	}
	return "\x1B[" + num + "D";
};
ANSI.moveDownReset = function(num) {
	if(num == null) {
		num = 1;
	}
	if(ANSI.strip || ANSI.stripIfUnavailable && !ANSI.available) {
		return "";
	}
	return "\x1B[" + num + "E";
};
ANSI.moveDown = function(num) {
	if(num == null) {
		num = 1;
	}
	if(ANSI.strip || ANSI.stripIfUnavailable && !ANSI.available) {
		return "";
	}
	return "\x1B[" + num + "B";
};
ANSI.loadCursor = function() {
	if(ANSI.strip || ANSI.stripIfUnavailable && !ANSI.available) {
		return "";
	}
	return "\x1B[u";
};
ANSI.insertLines = function(num) {
	if(num == null) {
		num = 1;
	}
	if(ANSI.strip || ANSI.stripIfUnavailable && !ANSI.available) {
		return "";
	}
	return "\x1B[" + num + "L";
};
ANSI.insertLine = function() {
	if(ANSI.strip || ANSI.stripIfUnavailable && !ANSI.available) {
		return "";
	}
	return "\x1B[L";
};
ANSI.insertChars = function(num) {
	if(num == null) {
		num = 1;
	}
	if(ANSI.strip || ANSI.stripIfUnavailable && !ANSI.available) {
		return "";
	}
	return "\x1B[" + num + "@";
};
ANSI.insertChar = function() {
	if(ANSI.strip || ANSI.stripIfUnavailable && !ANSI.available) {
		return "";
	}
	return "\x1B[@";
};
ANSI.hideCursor = function() {
	if(ANSI.strip || ANSI.stripIfUnavailable && !ANSI.available) {
		return "";
	}
	return "\x1B[?25l";
};
ANSI.eraseLineToEnd = function() {
	if(ANSI.strip || ANSI.stripIfUnavailable && !ANSI.available) {
		return "";
	}
	return "\x1B[K";
};
ANSI.eraseLineToCursor = function() {
	if(ANSI.strip || ANSI.stripIfUnavailable && !ANSI.available) {
		return "";
	}
	return "\x1B[1K";
};
ANSI.eraseLine = function() {
	if(ANSI.strip || ANSI.stripIfUnavailable && !ANSI.available) {
		return "";
	}
	return "\x1B[2K";
};
ANSI.eraseDisplayToEnd = function() {
	if(ANSI.strip || ANSI.stripIfUnavailable && !ANSI.available) {
		return "";
	}
	return "\x1B[J";
};
ANSI.eraseDisplayToCursor = function() {
	if(ANSI.strip || ANSI.stripIfUnavailable && !ANSI.available) {
		return "";
	}
	return "\x1B[1J";
};
ANSI.eraseDisplay = function() {
	if(ANSI.strip || ANSI.stripIfUnavailable && !ANSI.available) {
		return "";
	}
	return "\x1B[2J";
};
ANSI.eraseChars = function(num) {
	if(num == null) {
		num = 1;
	}
	if(ANSI.strip || ANSI.stripIfUnavailable && !ANSI.available) {
		return "";
	}
	return "\x1B[" + num + "X";
};
ANSI.eraseChar = function() {
	if(ANSI.strip || ANSI.stripIfUnavailable && !ANSI.available) {
		return "";
	}
	return "\x1B[X";
};
ANSI.deleteLines = function(num) {
	if(num == null) {
		num = 1;
	}
	if(ANSI.strip || ANSI.stripIfUnavailable && !ANSI.available) {
		return "";
	}
	return "\x1B[" + num + "M";
};
ANSI.deleteLine = function() {
	if(ANSI.strip || ANSI.stripIfUnavailable && !ANSI.available) {
		return "";
	}
	return "\x1B[M";
};
ANSI.deleteChars = function(num) {
	if(num == null) {
		num = 1;
	}
	if(ANSI.strip || ANSI.stripIfUnavailable && !ANSI.available) {
		return "";
	}
	return "\x1B[" + num + "P";
};
ANSI.deleteChar = function() {
	if(ANSI.strip || ANSI.stripIfUnavailable && !ANSI.available) {
		return "";
	}
	return "\x1B[P";
};
var EReg = function(r,opt) {
	this.r = new RegExp(r,opt.split("u").join(""));
};
EReg.__name__ = "EReg";
EReg.prototype = {
	match: function(s) {
		if(this.r.global) {
			this.r.lastIndex = 0;
		}
		this.r.m = this.r.exec(s);
		this.r.s = s;
		return this.r.m != null;
	}
	,matched: function(n) {
		if(this.r.m != null && n >= 0 && n < this.r.m.length) {
			return this.r.m[n];
		} else {
			throw new js__$Boot_HaxeError("EReg::matched");
		}
	}
	,__class__: EReg
};
var HxOverrides = function() { };
HxOverrides.__name__ = "HxOverrides";
HxOverrides.cca = function(s,index) {
	var x = s.charCodeAt(index);
	if(x != x) {
		return undefined;
	}
	return x;
};
HxOverrides.substr = function(s,pos,len) {
	if(len == null) {
		len = s.length;
	} else if(len < 0) {
		if(pos == 0) {
			len = s.length + len;
		} else {
			return "";
		}
	}
	return s.substr(pos,len);
};
HxOverrides.remove = function(a,obj) {
	var i = a.indexOf(obj);
	if(i == -1) {
		return false;
	}
	a.splice(i,1);
	return true;
};
HxOverrides.iter = function(a) {
	return { cur : 0, arr : a, hasNext : function() {
		return this.cur < this.arr.length;
	}, next : function() {
		return this.arr[this.cur++];
	}};
};
var IntIterator = function(min,max) {
	this.min = min;
	this.max = max;
};
IntIterator.__name__ = "IntIterator";
IntIterator.prototype = {
	hasNext: function() {
		return this.min < this.max;
	}
	,next: function() {
		return this.min++;
	}
	,__class__: IntIterator
};
var tink_testrunner_SuiteObject = function() { };
tink_testrunner_SuiteObject.__name__ = "tink.testrunner.SuiteObject";
tink_testrunner_SuiteObject.prototype = {
	__class__: tink_testrunner_SuiteObject
};
var tink_testrunner_BasicSuite = function(info,cases,pos) {
	this.info = info;
	this.cases = cases;
	if(info.pos == null) {
		info.pos = pos;
	}
	var _g = 0;
	while(_g < cases.length) cases[_g++].suite = this;
};
tink_testrunner_BasicSuite.__name__ = "tink.testrunner.BasicSuite";
tink_testrunner_BasicSuite.__interfaces__ = [tink_testrunner_SuiteObject];
tink_testrunner_BasicSuite.prototype = {
	setup: function() {
		return tink_core__$Promise_Promise_$Impl_$.NOISE;
	}
	,before: function() {
		return tink_core__$Promise_Promise_$Impl_$.NOISE;
	}
	,after: function() {
		return tink_core__$Promise_Promise_$Impl_$.NOISE;
	}
	,teardown: function() {
		return tink_core__$Promise_Promise_$Impl_$.NOISE;
	}
	,__class__: tink_testrunner_BasicSuite
};
var Main = function() {
	var c = js_Boot.getClass(this);
	tink_testrunner_BasicSuite.call(this,{ name : c.__name__},[],{ fileName : "src/Main.hx", lineNumber : 17, className : "Main", methodName : "new"});
	this.testMain_1();
};
Main.__name__ = "Main";
Main.main = function() {
	tink_testrunner_Runner.run([new Main()]);
};
Main.__super__ = tink_testrunner_BasicSuite;
Main.prototype = $extend(tink_testrunner_BasicSuite.prototype,{
	testMain_1: function() {
		var left;
		try {
			left = MyTools.isValidName(null);
		} catch( ex ) {
			haxe_CallStack.lastException = ex;
			left = "exception: " + Std.string(((ex) instanceof js__$Boot_HaxeError) ? ex.val : ex) + hx_doctest_internal_DocTestUtils.exceptionStackAsString();
		}
		var right;
		try {
			right = false;
		} catch( ex1 ) {
			haxe_CallStack.lastException = ex1;
			right = "exception: " + Std.string(((ex1) instanceof js__$Boot_HaxeError) ? ex1.val : ex1) + hx_doctest_internal_DocTestUtils.exceptionStackAsString();
		}
		if(hx_doctest_internal_DocTestUtils.equals(left,right)) {
			this.cases.push(new hx_doctest_internal_adapters_SingeAssertionCase(null,new tink_testrunner_Assertion(tink_testrunner__$Assertion_AssertionResult_$Impl_$.ofBool(true),"MyTools.isValidName(null)   == false",{ lineNumber : 28, fileName : "src/Main.hx", className : "", methodName : ""})));
		} else {
			this.cases.push(new hx_doctest_internal_adapters_SingeAssertionCase(null,new tink_testrunner_Assertion(tink_testrunner__$Assertion_AssertionResult_$Impl_$.ofBool(false),"MyTools.isValidName(null)   == false --> Left side '" + Std.string(left) + "' does not equal '" + Std.string(right) + "'.",{ lineNumber : 28, fileName : "src/Main.hx", className : "", methodName : ""})));
		}
		var left1;
		try {
			left1 = MyTools.isValidName("");
		} catch( ex2 ) {
			haxe_CallStack.lastException = ex2;
			left1 = "exception: " + Std.string(((ex2) instanceof js__$Boot_HaxeError) ? ex2.val : ex2) + hx_doctest_internal_DocTestUtils.exceptionStackAsString();
		}
		var right1;
		try {
			right1 = false;
		} catch( ex3 ) {
			haxe_CallStack.lastException = ex3;
			right1 = "exception: " + Std.string(((ex3) instanceof js__$Boot_HaxeError) ? ex3.val : ex3) + hx_doctest_internal_DocTestUtils.exceptionStackAsString();
		}
		if(hx_doctest_internal_DocTestUtils.equals(left1,right1)) {
			this.cases.push(new hx_doctest_internal_adapters_SingeAssertionCase(null,new tink_testrunner_Assertion(tink_testrunner__$Assertion_AssertionResult_$Impl_$.ofBool(true),"MyTools.isValidName(\"\")     == false",{ lineNumber : 29, fileName : "src/Main.hx", className : "", methodName : ""})));
		} else {
			this.cases.push(new hx_doctest_internal_adapters_SingeAssertionCase(null,new tink_testrunner_Assertion(tink_testrunner__$Assertion_AssertionResult_$Impl_$.ofBool(false),"MyTools.isValidName(\"\")     == false --> Left side '" + Std.string(left1) + "' does not equal '" + Std.string(right1) + "'.",{ lineNumber : 29, fileName : "src/Main.hx", className : "", methodName : ""})));
		}
		var left2;
		try {
			left2 = MyTools.isValidName("John");
		} catch( ex4 ) {
			haxe_CallStack.lastException = ex4;
			left2 = "exception: " + Std.string(((ex4) instanceof js__$Boot_HaxeError) ? ex4.val : ex4) + hx_doctest_internal_DocTestUtils.exceptionStackAsString();
		}
		var right2;
		try {
			right2 = true;
		} catch( ex5 ) {
			haxe_CallStack.lastException = ex5;
			right2 = "exception: " + Std.string(((ex5) instanceof js__$Boot_HaxeError) ? ex5.val : ex5) + hx_doctest_internal_DocTestUtils.exceptionStackAsString();
		}
		if(hx_doctest_internal_DocTestUtils.equals(left2,right2)) {
			this.cases.push(new hx_doctest_internal_adapters_SingeAssertionCase(null,new tink_testrunner_Assertion(tink_testrunner__$Assertion_AssertionResult_$Impl_$.ofBool(true),"MyTools.isValidName(\"John\") == true",{ lineNumber : 30, fileName : "src/Main.hx", className : "", methodName : ""})));
		} else {
			this.cases.push(new hx_doctest_internal_adapters_SingeAssertionCase(null,new tink_testrunner_Assertion(tink_testrunner__$Assertion_AssertionResult_$Impl_$.ofBool(false),"MyTools.isValidName(\"John\") == true --> Left side '" + Std.string(left2) + "' does not equal '" + Std.string(right2) + "'.",{ lineNumber : 30, fileName : "src/Main.hx", className : "", methodName : ""})));
		}
		var left3 = "nothing";
		try {
			new MyObject(null);
		} catch( ex6 ) {
			haxe_CallStack.lastException = ex6;
			left3 = ((ex6) instanceof js__$Boot_HaxeError) ? ex6.val : ex6;
		}
		var right3;
		try {
			right3 = "[data] must not be null!";
		} catch( ex7 ) {
			haxe_CallStack.lastException = ex7;
			right3 = "exception: " + Std.string(((ex7) instanceof js__$Boot_HaxeError) ? ex7.val : ex7);
		}
		if(hx_doctest_internal_DocTestUtils.equals(left3,right3)) {
			this.cases.push(new hx_doctest_internal_adapters_SingeAssertionCase(null,new tink_testrunner_Assertion(tink_testrunner__$Assertion_AssertionResult_$Impl_$.ofBool(true),"new MyObject(null) throws \"[data] must not be null!\"",{ lineNumber : 45, fileName : "src/Main.hx", className : "", methodName : ""})));
		} else {
			this.cases.push(new hx_doctest_internal_adapters_SingeAssertionCase(null,new tink_testrunner_Assertion(tink_testrunner__$Assertion_AssertionResult_$Impl_$.ofBool(false),"new MyObject(null) throws \"[data] must not be null!\" --> Expected `" + Std.string(right3) + "` but was `" + Std.string(left3) + "`.",{ lineNumber : 45, fileName : "src/Main.hx", className : "", methodName : ""})));
		}
		var left4 = "nothing";
		try {
			new MyObject(null);
		} catch( ex8 ) {
			haxe_CallStack.lastException = ex8;
			left4 = ((ex8) instanceof js__$Boot_HaxeError) ? ex8.val : ex8;
		}
		var right4;
		try {
			right4 = new EReg("must not be null","");
		} catch( ex9 ) {
			haxe_CallStack.lastException = ex9;
			right4 = "exception: " + Std.string(((ex9) instanceof js__$Boot_HaxeError) ? ex9.val : ex9);
		}
		if(hx_doctest_internal_DocTestUtils.equals(left4,right4)) {
			this.cases.push(new hx_doctest_internal_adapters_SingeAssertionCase(null,new tink_testrunner_Assertion(tink_testrunner__$Assertion_AssertionResult_$Impl_$.ofBool(true),"new MyObject(null) throws ~/must not be null/",{ lineNumber : 46, fileName : "src/Main.hx", className : "", methodName : ""})));
		} else {
			this.cases.push(new hx_doctest_internal_adapters_SingeAssertionCase(null,new tink_testrunner_Assertion(tink_testrunner__$Assertion_AssertionResult_$Impl_$.ofBool(false),"new MyObject(null) throws ~/must not be null/ --> Expected `" + Std.string(right4) + "` but was `" + Std.string(left4) + "`.",{ lineNumber : 46, fileName : "src/Main.hx", className : "", methodName : ""})));
		}
		var left5 = "nothing";
		try {
			new MyObject("ab");
		} catch( ex10 ) {
			haxe_CallStack.lastException = ex10;
			left5 = ((ex10) instanceof js__$Boot_HaxeError) ? ex10.val : ex10;
		}
		var right5;
		try {
			right5 = "nothing";
		} catch( ex11 ) {
			haxe_CallStack.lastException = ex11;
			right5 = "exception: " + Std.string(((ex11) instanceof js__$Boot_HaxeError) ? ex11.val : ex11);
		}
		if(hx_doctest_internal_DocTestUtils.equals(left5,right5)) {
			this.cases.push(new hx_doctest_internal_adapters_SingeAssertionCase(null,new tink_testrunner_Assertion(tink_testrunner__$Assertion_AssertionResult_$Impl_$.ofBool(true),"new MyObject(\"ab\") throws nothing",{ lineNumber : 47, fileName : "src/Main.hx", className : "", methodName : ""})));
		} else {
			this.cases.push(new hx_doctest_internal_adapters_SingeAssertionCase(null,new tink_testrunner_Assertion(tink_testrunner__$Assertion_AssertionResult_$Impl_$.ofBool(false),"new MyObject(\"ab\") throws nothing --> Expected `" + Std.string(right5) + "` but was `" + Std.string(left5) + "`.",{ lineNumber : 47, fileName : "src/Main.hx", className : "", methodName : ""})));
		}
		var left6;
		try {
			left6 = new MyObject("ab").length();
		} catch( ex12 ) {
			haxe_CallStack.lastException = ex12;
			left6 = "exception: " + Std.string(((ex12) instanceof js__$Boot_HaxeError) ? ex12.val : ex12) + hx_doctest_internal_DocTestUtils.exceptionStackAsString();
		}
		var right6;
		try {
			right6 = 1;
		} catch( ex13 ) {
			haxe_CallStack.lastException = ex13;
			right6 = "exception: " + Std.string(((ex13) instanceof js__$Boot_HaxeError) ? ex13.val : ex13) + hx_doctest_internal_DocTestUtils.exceptionStackAsString();
		}
		if(left6 > right6) {
			this.cases.push(new hx_doctest_internal_adapters_SingeAssertionCase(null,new tink_testrunner_Assertion(tink_testrunner__$Assertion_AssertionResult_$Impl_$.ofBool(true),"new MyObject(\"ab\").length()  > 1",{ lineNumber : 57, fileName : "src/Main.hx", className : "", methodName : ""})));
		} else {
			this.cases.push(new hx_doctest_internal_adapters_SingeAssertionCase(null,new tink_testrunner_Assertion(tink_testrunner__$Assertion_AssertionResult_$Impl_$.ofBool(false),"new MyObject(\"ab\").length()  > 1 --> Left side '" + Std.string(left6) + "' is not greater than '" + Std.string(right6) + "'.",{ lineNumber : 57, fileName : "src/Main.hx", className : "", methodName : ""})));
		}
		var left7;
		try {
			left7 = new MyObject("ab").length();
		} catch( ex14 ) {
			haxe_CallStack.lastException = ex14;
			left7 = "exception: " + Std.string(((ex14) instanceof js__$Boot_HaxeError) ? ex14.val : ex14) + hx_doctest_internal_DocTestUtils.exceptionStackAsString();
		}
		var right7;
		try {
			right7 = 2;
		} catch( ex15 ) {
			haxe_CallStack.lastException = ex15;
			right7 = "exception: " + Std.string(((ex15) instanceof js__$Boot_HaxeError) ? ex15.val : ex15) + hx_doctest_internal_DocTestUtils.exceptionStackAsString();
		}
		if(left7 <= right7) {
			this.cases.push(new hx_doctest_internal_adapters_SingeAssertionCase(null,new tink_testrunner_Assertion(tink_testrunner__$Assertion_AssertionResult_$Impl_$.ofBool(true),"new MyObject(\"ab\").length()  <= 2",{ lineNumber : 58, fileName : "src/Main.hx", className : "", methodName : ""})));
		} else {
			this.cases.push(new hx_doctest_internal_adapters_SingeAssertionCase(null,new tink_testrunner_Assertion(tink_testrunner__$Assertion_AssertionResult_$Impl_$.ofBool(false),"new MyObject(\"ab\").length()  <= 2 --> Left side '" + Std.string(left7) + "' is not lower than or equal '" + Std.string(right7) + "'.",{ lineNumber : 58, fileName : "src/Main.hx", className : "", methodName : ""})));
		}
		var left8;
		try {
			left8 = new MyObject("abc").length();
		} catch( ex16 ) {
			haxe_CallStack.lastException = ex16;
			left8 = "exception: " + Std.string(((ex16) instanceof js__$Boot_HaxeError) ? ex16.val : ex16) + hx_doctest_internal_DocTestUtils.exceptionStackAsString();
		}
		var right8;
		try {
			right8 = 2;
		} catch( ex17 ) {
			haxe_CallStack.lastException = ex17;
			right8 = "exception: " + Std.string(((ex17) instanceof js__$Boot_HaxeError) ? ex17.val : ex17) + hx_doctest_internal_DocTestUtils.exceptionStackAsString();
		}
		if(!hx_doctest_internal_DocTestUtils.equals(left8,right8)) {
			this.cases.push(new hx_doctest_internal_adapters_SingeAssertionCase(null,new tink_testrunner_Assertion(tink_testrunner__$Assertion_AssertionResult_$Impl_$.ofBool(true),"new MyObject(\"abc\").length() != 2",{ lineNumber : 59, fileName : "src/Main.hx", className : "", methodName : ""})));
		} else {
			this.cases.push(new hx_doctest_internal_adapters_SingeAssertionCase(null,new tink_testrunner_Assertion(tink_testrunner__$Assertion_AssertionResult_$Impl_$.ofBool(false),"new MyObject(\"abc\").length() != 2 --> Left side '" + Std.string(left8) + "' equals '" + Std.string(right8) + "'.",{ lineNumber : 59, fileName : "src/Main.hx", className : "", methodName : ""})));
		}
		var left9;
		try {
			var o = new MyObject("cat");
			o.setData("dog");
			left9 = o.data;
		} catch( ex18 ) {
			haxe_CallStack.lastException = ex18;
			left9 = "exception: " + Std.string(((ex18) instanceof js__$Boot_HaxeError) ? ex18.val : ex18) + hx_doctest_internal_DocTestUtils.exceptionStackAsString();
		}
		var right9;
		try {
			right9 = "dog";
		} catch( ex19 ) {
			haxe_CallStack.lastException = ex19;
			right9 = "exception: " + Std.string(((ex19) instanceof js__$Boot_HaxeError) ? ex19.val : ex19) + hx_doctest_internal_DocTestUtils.exceptionStackAsString();
		}
		if(hx_doctest_internal_DocTestUtils.equals(left9,right9)) {
			this.cases.push(new hx_doctest_internal_adapters_SingeAssertionCase(null,new tink_testrunner_Assertion(tink_testrunner__$Assertion_AssertionResult_$Impl_$.ofBool(true),"({ var o=new MyObject(\"cat\"); o.setData(\"dog\"); o.data; }) == \"dog\"",{ lineNumber : 68, fileName : "src/Main.hx", className : "", methodName : ""})));
		} else {
			this.cases.push(new hx_doctest_internal_adapters_SingeAssertionCase(null,new tink_testrunner_Assertion(tink_testrunner__$Assertion_AssertionResult_$Impl_$.ofBool(false),"({ var o=new MyObject(\"cat\"); o.setData(\"dog\"); o.data; }) == \"dog\" --> Left side '" + Std.string(left9) + "' does not equal '" + Std.string(right9) + "'.",{ lineNumber : 68, fileName : "src/Main.hx", className : "", methodName : ""})));
		}
	}
	,__class__: Main
});
var MyTools = function() { };
MyTools.__name__ = "MyTools";
MyTools.isValidName = function(str) {
	if(str != null) {
		return str.length > 0;
	} else {
		return false;
	}
};
var MyObject = function(data) {
	if(data == null) {
		throw new js__$Boot_HaxeError("[data] must not be null!");
	}
	this.data = data;
};
MyObject.__name__ = "MyObject";
MyObject.prototype = {
	length: function() {
		if(this.data == null) {
			return 0;
		} else {
			return this.data.length;
		}
	}
	,setData: function(data) {
		this.data = data;
	}
	,__class__: MyObject
};
Math.__name__ = "Math";
var StringBuf = function() {
	this.b = "";
};
StringBuf.__name__ = "StringBuf";
StringBuf.prototype = {
	__class__: StringBuf
};
var StringTools = function() { };
StringTools.__name__ = "StringTools";
StringTools.startsWith = function(s,start) {
	if(s.length >= start.length) {
		return HxOverrides.substr(s,0,start.length) == start;
	} else {
		return false;
	}
};
StringTools.isSpace = function(s,pos) {
	var c = HxOverrides.cca(s,pos);
	if(!(c > 8 && c < 14)) {
		return c == 32;
	} else {
		return true;
	}
};
StringTools.ltrim = function(s) {
	var l = s.length;
	var r = 0;
	while(r < l && StringTools.isSpace(s,r)) ++r;
	if(r > 0) {
		return HxOverrides.substr(s,r,l - r);
	} else {
		return s;
	}
};
StringTools.rtrim = function(s) {
	var l = s.length;
	var r = 0;
	while(r < l && StringTools.isSpace(s,l - r - 1)) ++r;
	if(r > 0) {
		return HxOverrides.substr(s,0,l - r);
	} else {
		return s;
	}
};
StringTools.trim = function(s) {
	return StringTools.ltrim(StringTools.rtrim(s));
};
StringTools.lpad = function(s,c,l) {
	if(c.length <= 0) {
		return s;
	}
	var buf_b = "";
	l -= s.length;
	while(buf_b.length < l) buf_b += c == null ? "null" : "" + c;
	buf_b += s == null ? "null" : "" + s;
	return buf_b;
};
var Type = function() { };
Type.__name__ = "Type";
Type.enumEq = function(a,b) {
	if(a == b) {
		return true;
	}
	try {
		var e = a.__enum__;
		if(e == null || e != b.__enum__) {
			return false;
		}
		if(a._hx_index != b._hx_index) {
			return false;
		}
		var enm = $hxEnums[e];
		var ctorName = enm.__constructs__[a._hx_index];
		var params = enm[ctorName].__params__;
		var _g = 0;
		while(_g < params.length) {
			var f = params[_g];
			++_g;
			if(!Type.enumEq(a[f],b[f])) {
				return false;
			}
		}
	} catch( e1 ) {
		haxe_CallStack.lastException = e1;
		var e2 = ((e1) instanceof js__$Boot_HaxeError) ? e1.val : e1;
		return false;
	}
	return true;
};
Type.enumParameters = function(e) {
	var enm = $hxEnums[e.__enum__];
	var ctorName = enm.__constructs__[e._hx_index];
	var params = enm[ctorName].__params__;
	if(params != null) {
		var _g = [];
		var _g1 = 0;
		while(_g1 < params.length) {
			var p = params[_g1];
			++_g1;
			_g.push(e[p]);
		}
		return _g;
	} else {
		return [];
	}
};
var haxe_StackItem = $hxEnums["haxe.StackItem"] = { __ename__ : true, __constructs__ : ["CFunction","Module","FilePos","Method","LocalFunction"]
	,CFunction: {_hx_index:0,__enum__:"haxe.StackItem",toString:$estr}
	,Module: ($_=function(m) { return {_hx_index:1,m:m,__enum__:"haxe.StackItem",toString:$estr}; },$_.__params__ = ["m"],$_)
	,FilePos: ($_=function(s,file,line,column) { return {_hx_index:2,s:s,file:file,line:line,column:column,__enum__:"haxe.StackItem",toString:$estr}; },$_.__params__ = ["s","file","line","column"],$_)
	,Method: ($_=function(classname,method) { return {_hx_index:3,classname:classname,method:method,__enum__:"haxe.StackItem",toString:$estr}; },$_.__params__ = ["classname","method"],$_)
	,LocalFunction: ($_=function(v) { return {_hx_index:4,v:v,__enum__:"haxe.StackItem",toString:$estr}; },$_.__params__ = ["v"],$_)
};
var haxe_CallStack = function() { };
haxe_CallStack.__name__ = "haxe.CallStack";
haxe_CallStack.getStack = function(e) {
	if(e == null) {
		return [];
	}
	var oldValue = Error.prepareStackTrace;
	Error.prepareStackTrace = function(error,callsites) {
		var stack = [];
		var _g = 0;
		while(_g < callsites.length) {
			var site = callsites[_g];
			++_g;
			if(haxe_CallStack.wrapCallSite != null) {
				site = haxe_CallStack.wrapCallSite(site);
			}
			var method = null;
			var fullName = site.getFunctionName();
			if(fullName != null) {
				var idx = fullName.lastIndexOf(".");
				if(idx >= 0) {
					var className = HxOverrides.substr(fullName,0,idx);
					var methodName = HxOverrides.substr(fullName,idx + 1,null);
					method = haxe_StackItem.Method(className,methodName);
				}
			}
			var fileName = site.getFileName();
			var fileAddr = fileName == null ? -1 : fileName.indexOf("file:");
			if(haxe_CallStack.wrapCallSite != null && fileAddr > 0) {
				fileName = HxOverrides.substr(fileName,fileAddr + 6,null);
			}
			stack.push(haxe_StackItem.FilePos(method,fileName,site.getLineNumber(),site.getColumnNumber()));
		}
		return stack;
	};
	var a = haxe_CallStack.makeStack(e.stack);
	Error.prepareStackTrace = oldValue;
	return a;
};
haxe_CallStack.exceptionStack = function() {
	return haxe_CallStack.getStack(haxe_CallStack.lastException);
};
haxe_CallStack.toString = function(stack) {
	var b = new StringBuf();
	var _g = 0;
	while(_g < stack.length) {
		var s = stack[_g++];
		b.b += "\nCalled from ";
		haxe_CallStack.itemToString(b,s);
	}
	return b.b;
};
haxe_CallStack.itemToString = function(b,s) {
	switch(s._hx_index) {
	case 0:
		b.b += "a C function";
		break;
	case 1:
		var m = s.m;
		b.b = (b.b += "module ") + (m == null ? "null" : "" + m);
		break;
	case 2:
		var col = s.column;
		var line = s.line;
		var file = s.file;
		var s1 = s.s;
		if(s1 != null) {
			haxe_CallStack.itemToString(b,s1);
			b.b += " (";
		}
		b.b = (b.b += file == null ? "null" : "" + file) + " line ";
		b.b += line == null ? "null" : "" + line;
		if(col != null) {
			b.b = (b.b += " column ") + (col == null ? "null" : "" + col);
		}
		if(s1 != null) {
			b.b += ")";
		}
		break;
	case 3:
		var meth = s.method;
		var cname = s.classname;
		b.b = (b.b += cname == null ? "null" : "" + cname) + ".";
		b.b += meth == null ? "null" : "" + meth;
		break;
	case 4:
		var n = s.v;
		b.b = (b.b += "local function #") + (n == null ? "null" : "" + n);
		break;
	}
};
haxe_CallStack.makeStack = function(s) {
	if(s == null) {
		return [];
	} else if(typeof(s) == "string") {
		var stack = s.split("\n");
		if(stack[0] == "Error") {
			stack.shift();
		}
		var m = [];
		var rie10 = new EReg("^   at ([A-Za-z0-9_. ]+) \\(([^)]+):([0-9]+):([0-9]+)\\)$","");
		var _g = 0;
		while(_g < stack.length) {
			var line = stack[_g];
			++_g;
			if(rie10.match(line)) {
				var path = rie10.matched(1).split(".");
				var meth = path.pop();
				var file = rie10.matched(2);
				var line1 = Std.parseInt(rie10.matched(3));
				var column = Std.parseInt(rie10.matched(4));
				m.push(haxe_StackItem.FilePos(meth == "Anonymous function" ? haxe_StackItem.LocalFunction() : meth == "Global code" ? null : haxe_StackItem.Method(path.join("."),meth),file,line1,column));
			} else {
				m.push(haxe_StackItem.Module(StringTools.trim(line)));
			}
		}
		return m;
	} else {
		return s;
	}
};
var haxe_IMap = function() { };
haxe_IMap.__name__ = "haxe.IMap";
var haxe_Timer = function(time_ms) {
	var me = this;
	this.id = setInterval(function() {
		me.run();
	},time_ms);
};
haxe_Timer.__name__ = "haxe.Timer";
haxe_Timer.delay = function(f,time_ms) {
	var t = new haxe_Timer(time_ms);
	t.run = function() {
		t.stop();
		f();
	};
	return t;
};
haxe_Timer.prototype = {
	stop: function() {
		if(this.id == null) {
			return;
		}
		clearInterval(this.id);
		this.id = null;
	}
	,run: function() {
	}
	,__class__: haxe_Timer
};
var haxe_ds_BalancedTree = function() {
};
haxe_ds_BalancedTree.__name__ = "haxe.ds.BalancedTree";
haxe_ds_BalancedTree.__interfaces__ = [haxe_IMap];
haxe_ds_BalancedTree.prototype = {
	set: function(key,value) {
		this.root = this.setLoop(key,value,this.root);
	}
	,get: function(key) {
		var node = this.root;
		while(node != null) {
			var c = this.compare(key,node.key);
			if(c == 0) {
				return node.value;
			}
			if(c < 0) {
				node = node.left;
			} else {
				node = node.right;
			}
		}
		return null;
	}
	,setLoop: function(k,v,node) {
		if(node == null) {
			return new haxe_ds_TreeNode(null,k,v,null);
		}
		var c = this.compare(k,node.key);
		if(c == 0) {
			return new haxe_ds_TreeNode(node.left,k,v,node.right,node == null ? 0 : node._height);
		} else if(c < 0) {
			return this.balance(this.setLoop(k,v,node.left),node.key,node.value,node.right);
		} else {
			var nr = this.setLoop(k,v,node.right);
			return this.balance(node.left,node.key,node.value,nr);
		}
	}
	,balance: function(l,k,v,r) {
		var hl = l == null ? 0 : l._height;
		var hr = r == null ? 0 : r._height;
		if(hl > hr + 2) {
			var _this = l.left;
			var _this1 = l.right;
			if((_this == null ? 0 : _this._height) >= (_this1 == null ? 0 : _this1._height)) {
				return new haxe_ds_TreeNode(l.left,l.key,l.value,new haxe_ds_TreeNode(l.right,k,v,r));
			} else {
				return new haxe_ds_TreeNode(new haxe_ds_TreeNode(l.left,l.key,l.value,l.right.left),l.right.key,l.right.value,new haxe_ds_TreeNode(l.right.right,k,v,r));
			}
		} else if(hr > hl + 2) {
			var _this2 = r.right;
			var _this3 = r.left;
			if((_this2 == null ? 0 : _this2._height) > (_this3 == null ? 0 : _this3._height)) {
				return new haxe_ds_TreeNode(new haxe_ds_TreeNode(l,k,v,r.left),r.key,r.value,r.right);
			} else {
				return new haxe_ds_TreeNode(new haxe_ds_TreeNode(l,k,v,r.left.left),r.left.key,r.left.value,new haxe_ds_TreeNode(r.left.right,r.key,r.value,r.right));
			}
		} else {
			return new haxe_ds_TreeNode(l,k,v,r,(hl > hr ? hl : hr) + 1);
		}
	}
	,compare: function(k1,k2) {
		return Reflect.compare(k1,k2);
	}
	,__class__: haxe_ds_BalancedTree
};
var haxe_ds_TreeNode = function(l,k,v,r,h) {
	if(h == null) {
		h = -1;
	}
	this.left = l;
	this.key = k;
	this.value = v;
	this.right = r;
	if(h == -1) {
		var tmp;
		var _this = this.left;
		var _this1 = this.right;
		if((_this == null ? 0 : _this._height) > (_this1 == null ? 0 : _this1._height)) {
			var _this2 = this.left;
			tmp = _this2 == null ? 0 : _this2._height;
		} else {
			var _this3 = this.right;
			tmp = _this3 == null ? 0 : _this3._height;
		}
		this._height = tmp + 1;
	} else {
		this._height = h;
	}
};
haxe_ds_TreeNode.__name__ = "haxe.ds.TreeNode";
haxe_ds_TreeNode.prototype = {
	__class__: haxe_ds_TreeNode
};
var haxe_ds_Either = $hxEnums["haxe.ds.Either"] = { __ename__ : true, __constructs__ : ["Left","Right"]
	,Left: ($_=function(v) { return {_hx_index:0,v:v,__enum__:"haxe.ds.Either",toString:$estr}; },$_.__params__ = ["v"],$_)
	,Right: ($_=function(v) { return {_hx_index:1,v:v,__enum__:"haxe.ds.Either",toString:$estr}; },$_.__params__ = ["v"],$_)
};
var haxe_ds_EnumValueMap = function() {
	haxe_ds_BalancedTree.call(this);
};
haxe_ds_EnumValueMap.__name__ = "haxe.ds.EnumValueMap";
haxe_ds_EnumValueMap.__interfaces__ = [haxe_IMap];
haxe_ds_EnumValueMap.__super__ = haxe_ds_BalancedTree;
haxe_ds_EnumValueMap.prototype = $extend(haxe_ds_BalancedTree.prototype,{
	compare: function(k1,k2) {
		var d = k1._hx_index - k2._hx_index;
		if(d != 0) {
			return d;
		}
		var p1 = Type.enumParameters(k1);
		var p2 = Type.enumParameters(k2);
		if(p1.length == 0 && p2.length == 0) {
			return 0;
		}
		return this.compareArgs(p1,p2);
	}
	,compareArgs: function(a1,a2) {
		var ld = a1.length - a2.length;
		if(ld != 0) {
			return ld;
		}
		var _g = 0;
		var _g1 = a1.length;
		while(_g < _g1) {
			var i = _g++;
			var d = this.compareArg(a1[i],a2[i]);
			if(d != 0) {
				return d;
			}
		}
		return 0;
	}
	,compareArg: function(v1,v2) {
		if(Reflect.isEnumValue(v1) && Reflect.isEnumValue(v2)) {
			return this.compare(v1,v2);
		} else if(((v1) instanceof Array) && v1.__enum__ == null && (((v2) instanceof Array) && v2.__enum__ == null)) {
			return this.compareArgs(v1,v2);
		} else {
			return Reflect.compare(v1,v2);
		}
	}
	,__class__: haxe_ds_EnumValueMap
});
var haxe_ds_ObjectMap = function() {
	this.h = { __keys__ : { }};
};
haxe_ds_ObjectMap.__name__ = "haxe.ds.ObjectMap";
haxe_ds_ObjectMap.__interfaces__ = [haxe_IMap];
haxe_ds_ObjectMap.prototype = {
	__class__: haxe_ds_ObjectMap
};
var haxe_ds_Option = $hxEnums["haxe.ds.Option"] = { __ename__ : true, __constructs__ : ["Some","None"]
	,Some: ($_=function(v) { return {_hx_index:0,v:v,__enum__:"haxe.ds.Option",toString:$estr}; },$_.__params__ = ["v"],$_)
	,None: {_hx_index:1,__enum__:"haxe.ds.Option",toString:$estr}
};
var haxe_ds_StringMap = function() {
	this.h = { };
};
haxe_ds_StringMap.__name__ = "haxe.ds.StringMap";
haxe_ds_StringMap.__interfaces__ = [haxe_IMap];
haxe_ds_StringMap.prototype = {
	setReserved: function(key,value) {
		if(this.rh == null) {
			this.rh = { };
		}
		this.rh["$" + key] = value;
	}
	,__class__: haxe_ds_StringMap
};
var hx_doctest_internal_DocTestUtils = function() { };
hx_doctest_internal_DocTestUtils.__name__ = "hx.doctest.internal.DocTestUtils";
hx_doctest_internal_DocTestUtils.exceptionStackAsString = function() {
	var stack = haxe_CallStack.exceptionStack();
	var i = -1;
	var _g = 0;
	_hx_loop1: while(_g < stack.length) {
		var elem = stack[_g];
		++_g;
		++i;
		switch(elem._hx_index) {
		case 2:
			var elem2 = elem.s;
			if(StringTools.startsWith(elem.file,"hx/doctest")) {
				stack = stack.slice(0,i);
				break _hx_loop1;
			}
			if(elem2 != null) {
				if(elem2 != null) {
					if(elem2._hx_index == 3) {
						if(StringTools.startsWith(elem2.classname,"hx.doctest.")) {
							stack = stack.slice(0,i);
							break _hx_loop1;
						}
					}
				}
			}
			break;
		case 3:
			if(StringTools.startsWith(elem.classname,"hx.doctest.")) {
				stack = stack.slice(0,i);
				break _hx_loop1;
			}
			break;
		default:
		}
	}
	return "  " + haxe_CallStack.toString(stack).split("\n").join("\n  ") + "\n";
};
hx_doctest_internal_DocTestUtils.equals = function(left,right) {
	if(((left) instanceof Array) && left.__enum__ == null && (((right) instanceof Array) && right.__enum__ == null)) {
		if(left.length == right.length) {
			var _g = 0;
			var _g1 = left.length;
			while(_g < _g1) {
				var i = _g++;
				if(!hx_doctest_internal_DocTestUtils.equals(left[i],right[i])) {
					return false;
				}
			}
			return true;
		}
		return false;
	}
	if(((right) instanceof EReg)) {
		return (js_Boot.__cast(right , EReg)).match(Std.string(left));
	}
	if(Reflect.isEnumValue(left) && Reflect.isEnumValue(right)) {
		return Type.enumEq(left,right);
	}
	if(Reflect.isObject(left) && Reflect.isObject(right)) {
		var o = left;
		var clsLeft = o == null ? null : js_Boot.getClass(o);
		var clsNameLeft = clsLeft == null ? null : clsLeft.__name__;
		var o1 = right;
		var clsRight = o1 == null ? null : js_Boot.getClass(o1);
		var clsRightName = clsRight == null ? null : clsRight.__name__;
		if(clsNameLeft == null && clsRightName == null) {
			var clsLeftFields = Reflect.fields(left);
			clsLeftFields.sort(function(x,y) {
				if(x > y) {
					return 1;
				} else if(x == y) {
					return 0;
				} else {
					return -1;
				}
			});
			var clsRightFields = Reflect.fields(left);
			clsRightFields.sort(function(x1,y1) {
				if(x1 > y1) {
					return 1;
				} else if(x1 == y1) {
					return 0;
				} else {
					return -1;
				}
			});
			if(hx_doctest_internal_DocTestUtils.equals(clsLeftFields,clsRightFields)) {
				var _g2 = 0;
				while(_g2 < clsLeftFields.length) {
					var f = clsLeftFields[_g2];
					++_g2;
					if(!hx_doctest_internal_DocTestUtils.equals(Reflect.field(clsLeft,f),Reflect.field(clsRight,f))) {
						return false;
					}
				}
				return true;
			}
		}
	}
	return left == right;
};
hx_doctest_internal_DocTestUtils.substringAfter = function(str,sep) {
	var foundAt = str.indexOf(sep);
	if(foundAt == -1) {
		return "";
	}
	return str.substring(foundAt + sep.length);
};
hx_doctest_internal_DocTestUtils.substringAfterLast = function(str,sep) {
	var foundAt = str.lastIndexOf(sep);
	if(foundAt == -1) {
		return "";
	}
	return str.substring(foundAt + sep.length);
};
hx_doctest_internal_DocTestUtils.substringBefore = function(str,sep) {
	var foundAt = str.indexOf(sep);
	if(foundAt == -1) {
		return "";
	}
	return str.substring(0,foundAt);
};
hx_doctest_internal_DocTestUtils.substringBeforeLast = function(str,sep) {
	var foundAt = str.lastIndexOf(sep);
	if(foundAt == -1) {
		return "";
	}
	return str.substring(0,foundAt);
};
var tink_testrunner_CaseObject = function() { };
tink_testrunner_CaseObject.__name__ = "tink.testrunner.CaseObject";
tink_testrunner_CaseObject.prototype = {
	__class__: tink_testrunner_CaseObject
};
var tink_testrunner_BasicCase = function(pos) {
	this.pos = null;
	this.exclude = false;
	this.include = false;
	this.timeout = 5000;
	var c = js_Boot.getClass(this);
	this.info = { name : c.__name__, description : null, pos : pos};
};
tink_testrunner_BasicCase.__name__ = "tink.testrunner.BasicCase";
tink_testrunner_BasicCase.__interfaces__ = [tink_testrunner_CaseObject];
tink_testrunner_BasicCase.prototype = {
	execute: function() {
		return tink_streams__$Stream_Stream_$Impl_$.ofIterator(HxOverrides.iter([]));
	}
	,__class__: tink_testrunner_BasicCase
};
var hx_doctest_internal_adapters_SingeAssertionCase = function(pos,assertion) {
	tink_testrunner_BasicCase.call(this,pos);
	this.assertion = assertion;
};
hx_doctest_internal_adapters_SingeAssertionCase.__name__ = "hx.doctest.internal.adapters.SingeAssertionCase";
hx_doctest_internal_adapters_SingeAssertionCase.__super__ = tink_testrunner_BasicCase;
hx_doctest_internal_adapters_SingeAssertionCase.prototype = $extend(tink_testrunner_BasicCase.prototype,{
	execute: function() {
		return tink_streams__$Stream_Stream_$Impl_$.ofIterator(HxOverrides.iter([this.assertion]));
	}
	,__class__: hx_doctest_internal_adapters_SingeAssertionCase
});
var js__$Boot_HaxeError = function(val) {
	Error.call(this);
	this.val = val;
	if(Error.captureStackTrace) {
		Error.captureStackTrace(this,js__$Boot_HaxeError);
	}
};
js__$Boot_HaxeError.__name__ = "js._Boot.HaxeError";
js__$Boot_HaxeError.wrap = function(val) {
	if(((val) instanceof Error)) {
		return val;
	} else {
		return new js__$Boot_HaxeError(val);
	}
};
js__$Boot_HaxeError.__super__ = Error;
js__$Boot_HaxeError.prototype = $extend(Error.prototype,{
	__class__: js__$Boot_HaxeError
});
var tink_core_Annex = function(target) {
	this.target = target;
	this.registry = new haxe_ds_ObjectMap();
};
tink_core_Annex.__name__ = "tink.core.Annex";
tink_core_Annex.prototype = {
	__class__: tink_core_Annex
};
var tink_core__$Callback_Callback_$Impl_$ = {};
tink_core__$Callback_Callback_$Impl_$.__name__ = "tink.core._Callback.Callback_Impl_";
tink_core__$Callback_Callback_$Impl_$._new = function(f) {
	return f;
};
tink_core__$Callback_Callback_$Impl_$.toFunction = function(this1) {
	return this1;
};
tink_core__$Callback_Callback_$Impl_$.invoke = function(this1,data) {
	if(tink_core__$Callback_Callback_$Impl_$.depth < 1000) {
		tink_core__$Callback_Callback_$Impl_$.depth++;
		this1(data);
		tink_core__$Callback_Callback_$Impl_$.depth--;
	} else {
		var _e = this1;
		var f = function(data1) {
			tink_core__$Callback_Callback_$Impl_$.invoke(_e,data1);
		};
		var data2 = data;
		tink_core__$Callback_Callback_$Impl_$.defer(function() {
			f(data2);
		});
	}
};
tink_core__$Callback_Callback_$Impl_$.ignore = function(cb) {
	return function(_) {
		tink_core__$Callback_Callback_$Impl_$.invoke(cb,tink_core_Noise.Noise);
	};
};
tink_core__$Callback_Callback_$Impl_$.fromNiladic = function(f) {
	return f;
};
tink_core__$Callback_Callback_$Impl_$.fromMany = function(callbacks) {
	return function(v) {
		var _g = 0;
		while(_g < callbacks.length) tink_core__$Callback_Callback_$Impl_$.invoke(callbacks[_g++],v);
	};
};
tink_core__$Callback_Callback_$Impl_$.defer = function(f) {
	haxe_Timer.delay(f,0);
};
var tink_core__$Callback_LinkObject = function() { };
tink_core__$Callback_LinkObject.__name__ = "tink.core._Callback.LinkObject";
tink_core__$Callback_LinkObject.prototype = {
	__class__: tink_core__$Callback_LinkObject
};
var tink_core__$Callback_CallbackLink_$Impl_$ = {};
tink_core__$Callback_CallbackLink_$Impl_$.__name__ = "tink.core._Callback.CallbackLink_Impl_";
tink_core__$Callback_CallbackLink_$Impl_$._new = function(link) {
	return new tink_core__$Callback_SimpleLink(link);
};
tink_core__$Callback_CallbackLink_$Impl_$.cancel = function(this1) {
	if(this1 != null) {
		this1.cancel();
	}
};
tink_core__$Callback_CallbackLink_$Impl_$.dissolve = function(this1) {
	if(this1 != null) {
		this1.cancel();
	}
};
tink_core__$Callback_CallbackLink_$Impl_$.noop = function() {
};
tink_core__$Callback_CallbackLink_$Impl_$.toFunction = function(this1) {
	if(this1 == null) {
		return tink_core__$Callback_CallbackLink_$Impl_$.noop;
	} else {
		return $bind(this1,this1.cancel);
	}
};
tink_core__$Callback_CallbackLink_$Impl_$.toCallback = function(this1) {
	return function(_) {
		this1.cancel();
	};
};
tink_core__$Callback_CallbackLink_$Impl_$.fromFunction = function(f) {
	return new tink_core__$Callback_SimpleLink(f);
};
tink_core__$Callback_CallbackLink_$Impl_$.join = function(a,b) {
	return new tink_core__$Callback_LinkPair(a,b);
};
tink_core__$Callback_CallbackLink_$Impl_$.fromMany = function(callbacks) {
	return new tink_core__$Callback_SimpleLink(function() {
		var _g = 0;
		while(_g < callbacks.length) {
			var cb = callbacks[_g];
			++_g;
			if(cb != null) {
				cb.cancel();
			}
		}
	});
};
var tink_core__$Callback_SimpleLink = function(f) {
	this.f = f;
};
tink_core__$Callback_SimpleLink.__name__ = "tink.core._Callback.SimpleLink";
tink_core__$Callback_SimpleLink.__interfaces__ = [tink_core__$Callback_LinkObject];
tink_core__$Callback_SimpleLink.prototype = {
	cancel: function() {
		if(this.f != null) {
			this.f();
			this.f = null;
		}
	}
	,__class__: tink_core__$Callback_SimpleLink
};
var tink_core__$Callback_LinkPair = function(a,b) {
	this.dissolved = false;
	this.a = a;
	this.b = b;
};
tink_core__$Callback_LinkPair.__name__ = "tink.core._Callback.LinkPair";
tink_core__$Callback_LinkPair.__interfaces__ = [tink_core__$Callback_LinkObject];
tink_core__$Callback_LinkPair.prototype = {
	cancel: function() {
		if(!this.dissolved) {
			this.dissolved = true;
			var this1 = this.a;
			if(this1 != null) {
				this1.cancel();
			}
			var this2 = this.b;
			if(this2 != null) {
				this2.cancel();
			}
			this.a = null;
			this.b = null;
		}
	}
	,__class__: tink_core__$Callback_LinkPair
};
var tink_core__$Callback_ListCell = function(cb,list) {
	if(cb == null) {
		throw new js__$Boot_HaxeError("callback expected but null received");
	}
	this.cb = cb;
	this.list = list;
};
tink_core__$Callback_ListCell.__name__ = "tink.core._Callback.ListCell";
tink_core__$Callback_ListCell.__interfaces__ = [tink_core__$Callback_LinkObject];
tink_core__$Callback_ListCell.prototype = {
	invoke: function(data) {
		if(this.cb != null) {
			tink_core__$Callback_Callback_$Impl_$.invoke(this.cb,data);
		}
	}
	,clear: function() {
		this.list = null;
		this.cb = null;
	}
	,cancel: function() {
		var _g = this.list;
		if(_g != null) {
			this.clear();
			HxOverrides.remove(_g,this);
		}
	}
	,__class__: tink_core__$Callback_ListCell
};
var tink_core__$Callback_CallbackList_$Impl_$ = {};
tink_core__$Callback_CallbackList_$Impl_$.__name__ = "tink.core._Callback.CallbackList_Impl_";
tink_core__$Callback_CallbackList_$Impl_$._new = function() {
	return [];
};
tink_core__$Callback_CallbackList_$Impl_$.get_length = function(this1) {
	return this1.length;
};
tink_core__$Callback_CallbackList_$Impl_$.add = function(this1,cb) {
	var node = new tink_core__$Callback_ListCell(cb,this1);
	this1.push(node);
	return node;
};
tink_core__$Callback_CallbackList_$Impl_$.invoke = function(this1,data) {
	var _g = 0;
	var _g1 = this1.slice();
	while(_g < _g1.length) {
		var cell = _g1[_g];
		++_g;
		if(cell.cb != null) {
			tink_core__$Callback_Callback_$Impl_$.invoke(cell.cb,data);
		}
	}
};
tink_core__$Callback_CallbackList_$Impl_$.clear = function(this1) {
	var _g = 0;
	var _g1 = this1.splice(0,this1.length);
	while(_g < _g1.length) _g1[_g++].clear();
};
tink_core__$Callback_CallbackList_$Impl_$.invokeAndClear = function(this1,data) {
	var _g = 0;
	var _g1 = this1.splice(0,this1.length);
	while(_g < _g1.length) {
		var cell = _g1[_g];
		++_g;
		if(cell.cb != null) {
			tink_core__$Callback_Callback_$Impl_$.invoke(cell.cb,data);
		}
	}
};
var tink_core_TypedError = function(code,message,pos) {
	if(code == null) {
		code = 500;
	}
	this.isTinkError = true;
	this.code = code;
	this.message = message;
	this.pos = pos;
	this.exceptionStack = [];
	this.callStack = [];
};
tink_core_TypedError.__name__ = "tink.core.TypedError";
tink_core_TypedError.withData = function(code,message,data,pos) {
	return tink_core_TypedError.typed(code,message,data,pos);
};
tink_core_TypedError.typed = function(code,message,data,pos) {
	var ret = new tink_core_TypedError(code,message,pos);
	ret.data = data;
	return ret;
};
tink_core_TypedError.ofJsError = function(e,pos) {
	return tink_core_TypedError.withData(500,e.message,e,pos);
};
tink_core_TypedError.asError = function(v) {
	if(v != null && v.isTinkError) {
		return v;
	} else {
		return null;
	}
};
tink_core_TypedError.catchExceptions = function(f,report,pos) {
	try {
		return tink_core_Outcome.Success(f());
	} catch( e ) {
		haxe_CallStack.lastException = e;
		var e1 = ((e) instanceof js__$Boot_HaxeError) ? e.val : e;
		var _g = tink_core_TypedError.asError(e1);
		return tink_core_Outcome.Failure(_g == null ? report == null ? tink_core_TypedError.withData(null,"Unexpected Error",e1,pos) : report(e1) : _g);
	}
};
tink_core_TypedError.reporter = function(code,message,pos) {
	return function(e) {
		return tink_core_TypedError.withData(code,message,e,pos);
	};
};
tink_core_TypedError.rethrow = function(any) {
	throw js__$Boot_HaxeError.wrap(any);
};
tink_core_TypedError.tryFinally = function(f,cleanup) {
	try { return f(); } finally { cleanup(); }
	return null;
};
tink_core_TypedError.prototype = {
	printPos: function() {
		return this.pos.className + "." + this.pos.methodName + ":" + this.pos.lineNumber;
	}
	,toString: function() {
		var ret = "Error#" + this.code + ": " + this.message;
		if(this.pos != null) {
			ret += " @ " + this.printPos();
		}
		return ret;
	}
	,throwSelf: function() {
		throw js__$Boot_HaxeError.wrap(this);
	}
	,__class__: tink_core_TypedError
};
var tink_core__$Error_Stack_$Impl_$ = {};
tink_core__$Error_Stack_$Impl_$.__name__ = "tink.core._Error.Stack_Impl_";
tink_core__$Error_Stack_$Impl_$.toString = function(this1) {
	return "Error stack not available. Compile with -D error_stack.";
};
var tink_core__$Future_FutureObject = function() { };
tink_core__$Future_FutureObject.__name__ = "tink.core._Future.FutureObject";
tink_core__$Future_FutureObject.prototype = {
	__class__: tink_core__$Future_FutureObject
};
var tink_core__$Future_NeverFuture = function() {
};
tink_core__$Future_NeverFuture.__name__ = "tink.core._Future.NeverFuture";
tink_core__$Future_NeverFuture.__interfaces__ = [tink_core__$Future_FutureObject];
tink_core__$Future_NeverFuture.prototype = {
	map: function(f) {
		return tink_core__$Future_NeverFuture.inst;
	}
	,flatMap: function(f) {
		return tink_core__$Future_NeverFuture.inst;
	}
	,handle: function(callback) {
		return null;
	}
	,gather: function() {
		return tink_core__$Future_NeverFuture.inst;
	}
	,eager: function() {
		return tink_core__$Future_NeverFuture.inst;
	}
	,__class__: tink_core__$Future_NeverFuture
};
var tink_core__$Lazy_LazyObject = function() { };
tink_core__$Lazy_LazyObject.__name__ = "tink.core._Lazy.LazyObject";
tink_core__$Lazy_LazyObject.prototype = {
	__class__: tink_core__$Lazy_LazyObject
};
var tink_core__$Lazy_LazyConst = function(value) {
	this.value = value;
};
tink_core__$Lazy_LazyConst.__name__ = "tink.core._Lazy.LazyConst";
tink_core__$Lazy_LazyConst.__interfaces__ = [tink_core__$Lazy_LazyObject];
tink_core__$Lazy_LazyConst.prototype = {
	get: function() {
		return this.value;
	}
	,map: function(f) {
		var _gthis = this;
		return new tink_core__$Lazy_LazyFunc(function() {
			return f(_gthis.value);
		});
	}
	,flatMap: function(f) {
		var _gthis = this;
		return new tink_core__$Lazy_LazyFunc(function() {
			return f(_gthis.value).get();
		});
	}
	,__class__: tink_core__$Lazy_LazyConst
};
var tink_core__$Future_SyncFuture = function(value) {
	this.value = value;
};
tink_core__$Future_SyncFuture.__name__ = "tink.core._Future.SyncFuture";
tink_core__$Future_SyncFuture.__interfaces__ = [tink_core__$Future_FutureObject];
tink_core__$Future_SyncFuture.prototype = {
	map: function(f) {
		return new tink_core__$Future_SyncFuture(this.value.map(f));
	}
	,flatMap: function(f) {
		var l = this.value.map(f);
		return new tink_core__$Future_SimpleFuture(function(cb) {
			return l.get().handle(cb);
		});
	}
	,handle: function(cb) {
		tink_core__$Callback_Callback_$Impl_$.invoke(cb,this.value.get());
		return null;
	}
	,eager: function() {
		return this;
	}
	,gather: function() {
		return this;
	}
	,__class__: tink_core__$Future_SyncFuture
};
var tink_core_Noise = $hxEnums["tink.core.Noise"] = { __ename__ : true, __constructs__ : ["Noise"]
	,Noise: {_hx_index:0,__enum__:"tink.core.Noise",toString:$estr}
};
var tink_core__$Future_Future_$Impl_$ = {};
tink_core__$Future_Future_$Impl_$.__name__ = "tink.core._Future.Future_Impl_";
tink_core__$Future_Future_$Impl_$._new = function(f) {
	return new tink_core__$Future_SimpleFuture(f);
};
tink_core__$Future_Future_$Impl_$.first = function(this1,other) {
	var ret = new tink_core_FutureTrigger();
	var l1 = this1.handle($bind(ret,ret.trigger));
	var l2 = other.handle($bind(ret,ret.trigger));
	var ret1 = ret;
	if(l1 != null) {
		var this2 = l1;
		ret1.handle(function(_) {
			this2.cancel();
		});
	}
	if(l2 != null) {
		var this3 = l2;
		ret1.handle(function(_1) {
			this3.cancel();
		});
	}
	return ret1;
};
tink_core__$Future_Future_$Impl_$.map = function(this1,f,gather) {
	if(gather == null) {
		gather = true;
	}
	var ret = this1.map(f);
	if(gather) {
		return ret.gather();
	} else {
		return ret;
	}
};
tink_core__$Future_Future_$Impl_$.flatMap = function(this1,next,gather) {
	if(gather == null) {
		gather = true;
	}
	var ret = this1.flatMap(next);
	if(gather) {
		return ret.gather();
	} else {
		return ret;
	}
};
tink_core__$Future_Future_$Impl_$.next = function(this1,n) {
	return this1.flatMap(function(v) {
		return n(v);
	});
};
tink_core__$Future_Future_$Impl_$.merge = function(this1,other,merger,gather) {
	if(gather == null) {
		gather = true;
	}
	var ret = this1.flatMap(function(t) {
		return other.map(function(a) {
			return merger(t,a);
		});
	});
	if(gather) {
		return ret.gather();
	} else {
		return ret;
	}
};
tink_core__$Future_Future_$Impl_$.flatten = function(f) {
	return new tink_core__$Future_NestedFuture(f);
};
tink_core__$Future_Future_$Impl_$.ofJsPromise = function(promise) {
	return tink_core__$Future_Future_$Impl_$.async(function(cb) {
		promise.then(function(a) {
			cb(tink_core_Outcome.Success(a));
		}).catch(function(e) {
			var tmp = tink_core_Outcome.Failure(tink_core_TypedError.withData(null,e.message,e,{ fileName : "tink/core/Future.hx", lineNumber : 78, className : "tink.core._Future.Future_Impl_", methodName : "ofJsPromise"}));
			cb(tmp);
		});
	});
};
tink_core__$Future_Future_$Impl_$.ofAny = function(v) {
	return new tink_core__$Future_SyncFuture(new tink_core__$Lazy_LazyConst(v));
};
tink_core__$Future_Future_$Impl_$.asPromise = function(s) {
	return s;
};
tink_core__$Future_Future_$Impl_$.ofMany = function(futures,gather) {
	if(gather == null) {
		gather = true;
	}
	var ret = new tink_core__$Future_SyncFuture(new tink_core__$Lazy_LazyConst([]));
	var _g = 0;
	while(_g < futures.length) ret = ret.flatMap((function(f) {
		return function(results) {
			var ret1 = (function() {
				return function(result) {
					return results.concat([result]);
				};
			})();
			return f[0].map(ret1);
		};
	})([futures[_g++]]));
	if(gather) {
		return ret.gather();
	} else {
		return ret;
	}
};
tink_core__$Future_Future_$Impl_$.fromMany = function(futures) {
	return tink_core__$Future_Future_$Impl_$.ofMany(futures);
};
tink_core__$Future_Future_$Impl_$.lazy = function(l) {
	return new tink_core__$Future_SyncFuture(l);
};
tink_core__$Future_Future_$Impl_$.sync = function(v) {
	return new tink_core__$Future_SyncFuture(new tink_core__$Lazy_LazyConst(v));
};
tink_core__$Future_Future_$Impl_$.async = function(f,lazy) {
	if(lazy == null) {
		lazy = false;
	}
	if(lazy) {
		return new tink_core__$Future_LazyTrigger(f);
	} else {
		var op = new tink_core_FutureTrigger();
		tink_core__$Callback_Callback_$Impl_$.invoke(f,$bind(op,op.trigger));
		return op;
	}
};
tink_core__$Future_Future_$Impl_$.or = function(a,b) {
	return tink_core__$Future_Future_$Impl_$.first(a,b);
};
tink_core__$Future_Future_$Impl_$.either = function(a,b) {
	return tink_core__$Future_Future_$Impl_$.first(a.map(haxe_ds_Either.Left),b.map(haxe_ds_Either.Right));
};
tink_core__$Future_Future_$Impl_$.and = function(a,b) {
	return tink_core__$Future_Future_$Impl_$.merge(a,b,function(a1,b1) {
		return new tink_core_MPair(a1,b1);
	});
};
tink_core__$Future_Future_$Impl_$._tryFailingFlatMap = function(f,map) {
	return f.flatMap(function(o) {
		switch(o._hx_index) {
		case 0:
			return map(o.data);
		case 1:
			return new tink_core__$Future_SyncFuture(new tink_core__$Lazy_LazyConst(tink_core_Outcome.Failure(o.failure)));
		}
	}).gather();
};
tink_core__$Future_Future_$Impl_$._tryFlatMap = function(f,map) {
	return f.flatMap(function(o) {
		switch(o._hx_index) {
		case 0:
			return map(o.data).map(tink_core_Outcome.Success).gather();
		case 1:
			return new tink_core__$Future_SyncFuture(new tink_core__$Lazy_LazyConst(tink_core_Outcome.Failure(o.failure)));
		}
	}).gather();
};
tink_core__$Future_Future_$Impl_$._tryFailingMap = function(f,map) {
	return f.map(function(o) {
		return tink_core_OutcomeTools.flatMap(o,tink_core__$Outcome_OutcomeMapper_$Impl_$.withSameError(map));
	}).gather();
};
tink_core__$Future_Future_$Impl_$._tryMap = function(f,map) {
	return f.map(function(o) {
		return tink_core_OutcomeTools.map(o,map);
	}).gather();
};
tink_core__$Future_Future_$Impl_$._flatMap = function(f,map) {
	return f.flatMap(map).gather();
};
tink_core__$Future_Future_$Impl_$._map = function(f,map) {
	return f.map(map).gather();
};
tink_core__$Future_Future_$Impl_$.trigger = function() {
	return new tink_core_FutureTrigger();
};
tink_core__$Future_Future_$Impl_$.delay = function(ms,value) {
	return tink_core__$Future_Future_$Impl_$.async(function(cb) {
		haxe_Timer.delay(function() {
			cb(value.get());
		},ms);
	});
};
var tink_core__$Future_SimpleFuture = function(f) {
	this.f = f;
};
tink_core__$Future_SimpleFuture.__name__ = "tink.core._Future.SimpleFuture";
tink_core__$Future_SimpleFuture.__interfaces__ = [tink_core__$Future_FutureObject];
tink_core__$Future_SimpleFuture.prototype = {
	handle: function(callback) {
		return this.f(callback);
	}
	,map: function(f) {
		var _gthis = this;
		return new tink_core__$Future_SimpleFuture(function(cb) {
			return _gthis.f(function(v) {
				var tmp = f(v);
				tink_core__$Callback_Callback_$Impl_$.invoke(cb,tmp);
			});
		});
	}
	,flatMap: function(f) {
		var f1 = f;
		var _gthis = this;
		return tink_core__$Future_Future_$Impl_$.flatten(new tink_core__$Future_SimpleFuture(function(cb) {
			return _gthis.f(function(v) {
				var tmp = f1(v);
				tink_core__$Callback_Callback_$Impl_$.invoke(cb,tmp);
			});
		}));
	}
	,gather: function() {
		if(this.gathered != null) {
			return this.gathered;
		} else {
			return this.gathered = tink_core_FutureTrigger.gatherFuture(this);
		}
	}
	,eager: function() {
		var ret = this.gathered != null ? this.gathered : this.gathered = tink_core_FutureTrigger.gatherFuture(this);
		ret.handle(tink_core__$Callback_Callback_$Impl_$.fromNiladic(function() {
		}));
		return ret;
	}
	,__class__: tink_core__$Future_SimpleFuture
};
var tink_core__$Future_NestedFuture = function(outer) {
	this.outer = outer;
};
tink_core__$Future_NestedFuture.__name__ = "tink.core._Future.NestedFuture";
tink_core__$Future_NestedFuture.__interfaces__ = [tink_core__$Future_FutureObject];
tink_core__$Future_NestedFuture.prototype = {
	map: function(f) {
		return this.outer.flatMap(function(inner) {
			return inner.map(f).gather();
		}).gather();
	}
	,flatMap: function(f) {
		return this.outer.flatMap(function(inner) {
			return inner.flatMap(f).gather();
		}).gather();
	}
	,gather: function() {
		if(this.gathered != null) {
			return this.gathered;
		} else {
			return this.gathered = tink_core_FutureTrigger.gatherFuture(this);
		}
	}
	,eager: function() {
		var ret = this.gathered != null ? this.gathered : this.gathered = tink_core_FutureTrigger.gatherFuture(this);
		ret.handle(tink_core__$Callback_Callback_$Impl_$.fromNiladic(function() {
		}));
		return ret;
	}
	,handle: function(cb) {
		var ret = null;
		ret = this.outer.handle(function(inner) {
			ret = inner.handle(function(result) {
				tink_core__$Callback_Callback_$Impl_$.invoke(cb,result);
			});
		});
		return ret;
	}
	,__class__: tink_core__$Future_NestedFuture
};
var tink_core_FutureTrigger = function() {
	this.list = [];
};
tink_core_FutureTrigger.__name__ = "tink.core.FutureTrigger";
tink_core_FutureTrigger.__interfaces__ = [tink_core__$Future_FutureObject];
tink_core_FutureTrigger.gatherFuture = function(f) {
	var op = null;
	return new tink_core__$Future_SimpleFuture(function(cb) {
		if(op == null) {
			op = new tink_core_FutureTrigger();
			f.handle($bind(op,op.trigger));
			f = null;
		}
		return op.handle(cb);
	});
};
tink_core_FutureTrigger.prototype = {
	handle: function(callback) {
		var _g = this.list;
		if(_g == null) {
			tink_core__$Callback_Callback_$Impl_$.invoke(callback,this.result);
			return null;
		} else {
			return tink_core__$Callback_CallbackList_$Impl_$.add(_g,callback);
		}
	}
	,map: function(f) {
		if(this.list == null) {
			return new tink_core__$Future_SyncFuture(new tink_core__$Lazy_LazyConst(f(this.result)));
		} else {
			var ret = new tink_core_FutureTrigger();
			tink_core__$Callback_CallbackList_$Impl_$.add(this.list,function(v) {
				var tmp = f(v);
				ret.trigger(tmp);
			});
			return ret;
		}
	}
	,flatMap: function(f) {
		if(this.list == null) {
			return f(this.result);
		} else {
			var ret = new tink_core_FutureTrigger();
			tink_core__$Callback_CallbackList_$Impl_$.add(this.list,function(v) {
				f(v).handle($bind(ret,ret.trigger));
			});
			return ret;
		}
	}
	,gather: function() {
		return this;
	}
	,eager: function() {
		return this;
	}
	,asFuture: function() {
		return this;
	}
	,trigger: function(result) {
		if(this.list == null) {
			return false;
		} else {
			var list = this.list;
			this.list = null;
			this.result = result;
			tink_core__$Callback_CallbackList_$Impl_$.invoke(list,result);
			tink_core__$Callback_CallbackList_$Impl_$.clear(list);
			return true;
		}
	}
	,__class__: tink_core_FutureTrigger
};
var tink_core__$Future_LazyTrigger = function(op) {
	this.op = op;
	tink_core_FutureTrigger.call(this);
};
tink_core__$Future_LazyTrigger.__name__ = "tink.core._Future.LazyTrigger";
tink_core__$Future_LazyTrigger.__super__ = tink_core_FutureTrigger;
tink_core__$Future_LazyTrigger.prototype = $extend(tink_core_FutureTrigger.prototype,{
	eager: function() {
		if(this.op != null) {
			var op = this.op;
			this.op = null;
			tink_core__$Callback_Callback_$Impl_$.invoke(op,$bind(this,this.trigger));
		}
		return this;
	}
	,map: function(f) {
		var _gthis = this;
		if(this.op == null) {
			return tink_core_FutureTrigger.prototype.map.call(this,f);
		} else {
			return tink_core__$Future_Future_$Impl_$.async(function(cb) {
				_gthis.handle(function(v) {
					var tmp = f(v);
					cb(tmp);
				});
			},true);
		}
	}
	,flatMap: function(f) {
		var _gthis = this;
		if(this.op == null) {
			return tink_core_FutureTrigger.prototype.flatMap.call(this,f);
		} else {
			return tink_core__$Future_Future_$Impl_$.async(function(cb) {
				_gthis.handle(function(v) {
					f(v).handle(cb);
				});
			},true);
		}
	}
	,handle: function(cb) {
		this.eager();
		return tink_core_FutureTrigger.prototype.handle.call(this,cb);
	}
	,__class__: tink_core__$Future_LazyTrigger
});
var tink_core_JsPromiseTools = function() { };
tink_core_JsPromiseTools.__name__ = "tink.core.JsPromiseTools";
tink_core_JsPromiseTools.toSurprise = function(promise) {
	return tink_core__$Future_Future_$Impl_$.ofJsPromise(promise);
};
tink_core_JsPromiseTools.toPromise = function(promise) {
	return tink_core__$Future_Future_$Impl_$.ofJsPromise(promise);
};
var tink_core__$Lazy_Lazy_$Impl_$ = {};
tink_core__$Lazy_Lazy_$Impl_$.__name__ = "tink.core._Lazy.Lazy_Impl_";
tink_core__$Lazy_Lazy_$Impl_$.get = function(this1) {
	return this1.get();
};
tink_core__$Lazy_Lazy_$Impl_$.ofFunc = function(f) {
	return new tink_core__$Lazy_LazyFunc(f);
};
tink_core__$Lazy_Lazy_$Impl_$.map = function(this1,f) {
	return this1.map(f);
};
tink_core__$Lazy_Lazy_$Impl_$.flatMap = function(this1,f) {
	return this1.flatMap(f);
};
tink_core__$Lazy_Lazy_$Impl_$.ofConst = function(c) {
	return new tink_core__$Lazy_LazyConst(c);
};
var tink_core__$Lazy_LazyFunc = function(f) {
	this.f = f;
};
tink_core__$Lazy_LazyFunc.__name__ = "tink.core._Lazy.LazyFunc";
tink_core__$Lazy_LazyFunc.__interfaces__ = [tink_core__$Lazy_LazyObject];
tink_core__$Lazy_LazyFunc.prototype = {
	get: function() {
		if(this.f != null) {
			this.result = this.f();
			this.f = null;
		}
		return this.result;
	}
	,map: function(f) {
		var _gthis = this;
		return new tink_core__$Lazy_LazyFunc(function() {
			var tmp = _gthis.get();
			return f(tmp);
		});
	}
	,flatMap: function(f) {
		var _gthis = this;
		return new tink_core__$Lazy_LazyFunc(function() {
			var this1 = _gthis.get();
			return f(this1).get();
		});
	}
	,__class__: tink_core__$Lazy_LazyFunc
};
var tink_core_NamedWith = function(name,value) {
	this.name = name;
	this.value = value;
};
tink_core_NamedWith.__name__ = "tink.core.NamedWith";
tink_core_NamedWith.prototype = {
	__class__: tink_core_NamedWith
};
var tink_core_OptionTools = function() { };
tink_core_OptionTools.__name__ = "tink.core.OptionTools";
tink_core_OptionTools.force = function(o,pos) {
	if(o._hx_index == 0) {
		return o.v;
	} else {
		throw new js__$Boot_HaxeError(new tink_core_TypedError(404,"Some value expected but none found",pos));
	}
};
tink_core_OptionTools.or = function(o,l) {
	if(o._hx_index == 0) {
		return o.v;
	} else {
		return l.get();
	}
};
tink_core_OptionTools.orNull = function(o) {
	if(o._hx_index == 0) {
		return o.v;
	} else {
		return null;
	}
};
tink_core_OptionTools.filter = function(o,f) {
	if(o._hx_index == 0) {
		if(f(o.v) == false) {
			return haxe_ds_Option.None;
		} else {
			return o;
		}
	} else {
		return o;
	}
};
tink_core_OptionTools.satisfies = function(o,f) {
	if(o._hx_index == 0) {
		return f(o.v);
	} else {
		return false;
	}
};
tink_core_OptionTools.equals = function(o,v) {
	if(o._hx_index == 0) {
		return o.v == v;
	} else {
		return false;
	}
};
tink_core_OptionTools.map = function(o,f) {
	if(o._hx_index == 0) {
		return haxe_ds_Option.Some(f(o.v));
	} else {
		return haxe_ds_Option.None;
	}
};
tink_core_OptionTools.flatMap = function(o,f) {
	if(o._hx_index == 0) {
		return f(o.v);
	} else {
		return haxe_ds_Option.None;
	}
};
tink_core_OptionTools.iterator = function(o) {
	return new tink_core_OptionIter(o);
};
tink_core_OptionTools.toArray = function(o) {
	if(o._hx_index == 0) {
		return [o.v];
	} else {
		return [];
	}
};
var tink_core_OptionIter = function(o) {
	this.alive = true;
	if(o._hx_index == 0) {
		this.value = o.v;
	} else {
		this.alive = false;
	}
};
tink_core_OptionIter.__name__ = "tink.core.OptionIter";
tink_core_OptionIter.prototype = {
	hasNext: function() {
		return this.alive;
	}
	,next: function() {
		this.alive = false;
		return this.value;
	}
	,__class__: tink_core_OptionIter
};
var tink_core_Outcome = $hxEnums["tink.core.Outcome"] = { __ename__ : true, __constructs__ : ["Success","Failure"]
	,Success: ($_=function(data) { return {_hx_index:0,data:data,__enum__:"tink.core.Outcome",toString:$estr}; },$_.__params__ = ["data"],$_)
	,Failure: ($_=function(failure) { return {_hx_index:1,failure:failure,__enum__:"tink.core.Outcome",toString:$estr}; },$_.__params__ = ["failure"],$_)
};
var tink_core_OutcomeTools = function() { };
tink_core_OutcomeTools.__name__ = "tink.core.OutcomeTools";
tink_core_OutcomeTools.sure = function(outcome) {
	switch(outcome._hx_index) {
	case 0:
		return outcome.data;
	case 1:
		var failure = outcome.failure;
		var _g = tink_core_TypedError.asError(failure);
		if(_g == null) {
			throw new js__$Boot_HaxeError(failure);
		} else {
			return _g.throwSelf();
		}
		break;
	}
};
tink_core_OutcomeTools.toOption = function(outcome) {
	switch(outcome._hx_index) {
	case 0:
		return haxe_ds_Option.Some(outcome.data);
	case 1:
		return haxe_ds_Option.None;
	}
};
tink_core_OutcomeTools.toOutcome = function(option,pos) {
	switch(option._hx_index) {
	case 0:
		return tink_core_Outcome.Success(option.v);
	case 1:
		return tink_core_Outcome.Failure(new tink_core_TypedError(404,"Some value expected but none found in " + pos.fileName + "@line " + pos.lineNumber,{ fileName : "tink/core/Outcome.hx", lineNumber : 47, className : "tink.core.OutcomeTools", methodName : "toOutcome"}));
	}
};
tink_core_OutcomeTools.orNull = function(outcome) {
	switch(outcome._hx_index) {
	case 0:
		return outcome.data;
	case 1:
		return null;
	}
};
tink_core_OutcomeTools.orUse = function(outcome,fallback) {
	switch(outcome._hx_index) {
	case 0:
		return outcome.data;
	case 1:
		return fallback.get();
	}
};
tink_core_OutcomeTools.orTry = function(outcome,fallback) {
	switch(outcome._hx_index) {
	case 0:
		return outcome;
	case 1:
		return fallback.get();
	}
};
tink_core_OutcomeTools.equals = function(outcome,to) {
	switch(outcome._hx_index) {
	case 0:
		return outcome.data == to;
	case 1:
		return false;
	}
};
tink_core_OutcomeTools.map = function(outcome,transform) {
	switch(outcome._hx_index) {
	case 0:
		return tink_core_Outcome.Success(transform(outcome.data));
	case 1:
		return tink_core_Outcome.Failure(outcome.failure);
	}
};
tink_core_OutcomeTools.isSuccess = function(outcome) {
	if(outcome._hx_index == 0) {
		return true;
	} else {
		return false;
	}
};
tink_core_OutcomeTools.flatMap = function(o,mapper) {
	return tink_core__$Outcome_OutcomeMapper_$Impl_$.apply(mapper,o);
};
tink_core_OutcomeTools.swap = function(outcome,v) {
	switch(outcome._hx_index) {
	case 0:
		return tink_core_Outcome.Success(v);
	case 1:
		return tink_core_Outcome.Failure(outcome.failure);
	}
};
tink_core_OutcomeTools.attempt = function(f,report) {
	try {
		return tink_core_Outcome.Success(f());
	} catch( e ) {
		haxe_CallStack.lastException = e;
		return tink_core_Outcome.Failure(report(((e) instanceof js__$Boot_HaxeError) ? e.val : e));
	}
};
tink_core_OutcomeTools.flatten = function(o) {
	switch(o._hx_index) {
	case 0:
		switch(o.data._hx_index) {
		case 0:
			return tink_core_Outcome.Success(o.data.data);
		case 1:
			return tink_core_Outcome.Failure(o.data.failure);
		}
		break;
	case 1:
		return tink_core_Outcome.Failure(o.failure);
	}
};
var tink_core__$Outcome_OutcomeMapper_$Impl_$ = {};
tink_core__$Outcome_OutcomeMapper_$Impl_$.__name__ = "tink.core._Outcome.OutcomeMapper_Impl_";
tink_core__$Outcome_OutcomeMapper_$Impl_$._new = function(f) {
	return { f : f};
};
tink_core__$Outcome_OutcomeMapper_$Impl_$.apply = function(this1,o) {
	return this1.f(o);
};
tink_core__$Outcome_OutcomeMapper_$Impl_$.withSameError = function(f) {
	return tink_core__$Outcome_OutcomeMapper_$Impl_$._new(function(o) {
		switch(o._hx_index) {
		case 0:
			return f(o.data);
		case 1:
			return tink_core_Outcome.Failure(o.failure);
		}
	});
};
tink_core__$Outcome_OutcomeMapper_$Impl_$.withEitherError = function(f) {
	return tink_core__$Outcome_OutcomeMapper_$Impl_$._new(function(o) {
		switch(o._hx_index) {
		case 0:
			var _g = f(o.data);
			switch(_g._hx_index) {
			case 0:
				return tink_core_Outcome.Success(_g.data);
			case 1:
				return tink_core_Outcome.Failure(haxe_ds_Either.Right(_g.failure));
			}
			break;
		case 1:
			return tink_core_Outcome.Failure(haxe_ds_Either.Left(o.failure));
		}
	});
};
var tink_core__$Pair_Pair_$Impl_$ = {};
tink_core__$Pair_Pair_$Impl_$.__name__ = "tink.core._Pair.Pair_Impl_";
tink_core__$Pair_Pair_$Impl_$._new = function(a,b) {
	return new tink_core_MPair(a,b);
};
tink_core__$Pair_Pair_$Impl_$.get_a = function(this1) {
	return this1.a;
};
tink_core__$Pair_Pair_$Impl_$.get_b = function(this1) {
	return this1.b;
};
tink_core__$Pair_Pair_$Impl_$.toBool = function(this1) {
	return this1 != null;
};
tink_core__$Pair_Pair_$Impl_$.isNil = function(this1) {
	return this1 == null;
};
tink_core__$Pair_Pair_$Impl_$.nil = function() {
	return null;
};
var tink_core_MPair = function(a,b) {
	this.a = a;
	this.b = b;
};
tink_core_MPair.__name__ = "tink.core.MPair";
tink_core_MPair.prototype = {
	__class__: tink_core_MPair
};
var tink_core__$Promise_Promise_$Impl_$ = {};
tink_core__$Promise_Promise_$Impl_$.__name__ = "tink.core._Promise.Promise_Impl_";
tink_core__$Promise_Promise_$Impl_$._new = function(f,lazy) {
	if(lazy == null) {
		lazy = false;
	}
	return tink_core__$Future_Future_$Impl_$.async(function(cb) {
		f(function(v) {
			cb(tink_core_Outcome.Success(v));
		},function(e) {
			cb(tink_core_Outcome.Failure(e));
		});
	},lazy);
};
tink_core__$Promise_Promise_$Impl_$.eager = function(this1) {
	return this1.eager();
};
tink_core__$Promise_Promise_$Impl_$.map = function(this1,f) {
	return this1.map(f).gather();
};
tink_core__$Promise_Promise_$Impl_$.flatMap = function(this1,f) {
	return this1.flatMap(f).gather();
};
tink_core__$Promise_Promise_$Impl_$.tryRecover = function(this1,f) {
	return this1.flatMap(function(o) {
		switch(o._hx_index) {
		case 0:
			return new tink_core__$Future_SyncFuture(new tink_core__$Lazy_LazyConst(o));
		case 1:
			return f(o.failure);
		}
	}).gather();
};
tink_core__$Promise_Promise_$Impl_$.recover = function(this1,f) {
	return this1.flatMap(function(o) {
		switch(o._hx_index) {
		case 0:
			return new tink_core__$Future_SyncFuture(new tink_core__$Lazy_LazyConst(o.data));
		case 1:
			return f(o.failure);
		}
	}).gather();
};
tink_core__$Promise_Promise_$Impl_$.mapError = function(this1,f) {
	return this1.map(function(o) {
		switch(o._hx_index) {
		case 0:
			return o;
		case 1:
			return tink_core_Outcome.Failure(f(o.failure));
		}
	}).gather();
};
tink_core__$Promise_Promise_$Impl_$.handle = function(this1,cb) {
	return this1.handle(cb);
};
tink_core__$Promise_Promise_$Impl_$.noise = function(this1) {
	return tink_core__$Promise_Promise_$Impl_$.next(this1,function(v) {
		return new tink_core__$Future_SyncFuture(new tink_core__$Lazy_LazyConst(tink_core_Outcome.Success(tink_core_Noise.Noise)));
	});
};
tink_core__$Promise_Promise_$Impl_$.isSuccess = function(this1) {
	return this1.map(function(o) {
		return tink_core_OutcomeTools.isSuccess(o);
	}).gather();
};
tink_core__$Promise_Promise_$Impl_$.next = function(this1,f,gather) {
	if(gather == null) {
		gather = true;
	}
	var ret = this1.flatMap(function(o) {
		switch(o._hx_index) {
		case 0:
			return f(o.data);
		case 1:
			return new tink_core__$Future_SyncFuture(new tink_core__$Lazy_LazyConst(tink_core_Outcome.Failure(o.failure)));
		}
	});
	if(gather) {
		return ret.gather();
	} else {
		return ret;
	}
};
tink_core__$Promise_Promise_$Impl_$.swap = function(this1,v) {
	return tink_core__$Future_Future_$Impl_$._tryMap(this1,function(_) {
		return v;
	});
};
tink_core__$Promise_Promise_$Impl_$.swapError = function(this1,e) {
	return tink_core__$Promise_Promise_$Impl_$.mapError(this1,function(_) {
		return e;
	});
};
tink_core__$Promise_Promise_$Impl_$.merge = function(this1,other,merger,gather) {
	if(gather == null) {
		gather = true;
	}
	return tink_core__$Promise_Promise_$Impl_$.next(this1,function(t) {
		return tink_core__$Promise_Promise_$Impl_$.next(other,function(a) {
			return merger(t,a);
		},false);
	},gather);
};
tink_core__$Promise_Promise_$Impl_$.and = function(a,b) {
	return tink_core__$Promise_Promise_$Impl_$.merge(a,b,function(a1,b1) {
		return new tink_core__$Future_SyncFuture(new tink_core__$Lazy_LazyConst(tink_core_Outcome.Success(new tink_core_MPair(a1,b1))));
	});
};
tink_core__$Promise_Promise_$Impl_$.iterate = function(promises,$yield,$finally,lazy) {
	return tink_core__$Future_Future_$Impl_$.async(function(cb) {
		var iter = $getIterator(promises);
		var next = null;
		next = function() {
			if(iter.hasNext()) {
				iter.next().handle(function(o) {
					switch(o._hx_index) {
					case 0:
						$yield(o.data).handle(function(o1) {
							switch(o1._hx_index) {
							case 0:
								switch(o1.data._hx_index) {
								case 0:
									cb(tink_core_Outcome.Success(o1.data.v));
									break;
								case 1:
									next();
									break;
								}
								break;
							case 1:
								cb(tink_core_Outcome.Failure(o1.failure));
								break;
							}
						});
						break;
					case 1:
						cb(tink_core_Outcome.Failure(o.failure));
						break;
					}
				});
			} else {
				$finally.handle(cb);
			}
		};
		next();
	},lazy);
};
tink_core__$Promise_Promise_$Impl_$.retry = function(gen,next) {
	var stamp = function() {
		return Date.now() / 1000 * 1000;
	};
	var start = stamp();
	var attempt = null;
	attempt = function(count) {
		var f = function(error) {
			var f1 = stamp() - start;
			return tink_core__$Promise_Promise_$Impl_$.next(next({ attempt : count, error : error, elapsed : f1}),function(_) {
				return attempt(count + 1);
			});
		};
		return gen().flatMap(function(o) {
			switch(o._hx_index) {
			case 0:
				return new tink_core__$Future_SyncFuture(new tink_core__$Lazy_LazyConst(o));
			case 1:
				return f(o.failure);
			}
		}).gather();
	};
	return attempt(1);
};
tink_core__$Promise_Promise_$Impl_$.ofJsPromise = function(promise) {
	return tink_core__$Future_Future_$Impl_$.ofJsPromise(promise);
};
tink_core__$Promise_Promise_$Impl_$.ofSpecific = function(s) {
	return s;
};
tink_core__$Promise_Promise_$Impl_$.ofFuture = function(f) {
	return f.map(tink_core_Outcome.Success).gather();
};
tink_core__$Promise_Promise_$Impl_$.ofOutcome = function(o) {
	return new tink_core__$Future_SyncFuture(new tink_core__$Lazy_LazyConst(o));
};
tink_core__$Promise_Promise_$Impl_$.ofError = function(e) {
	return new tink_core__$Future_SyncFuture(new tink_core__$Lazy_LazyConst(tink_core_Outcome.Failure(e)));
};
tink_core__$Promise_Promise_$Impl_$.ofData = function(d) {
	return new tink_core__$Future_SyncFuture(new tink_core__$Lazy_LazyConst(tink_core_Outcome.Success(d)));
};
tink_core__$Promise_Promise_$Impl_$.lazy = function(p) {
	return tink_core__$Future_Future_$Impl_$.async(function(cb) {
		p.get().handle(cb);
	},true);
};
tink_core__$Promise_Promise_$Impl_$.inParallel = function(a,concurrency,lazy) {
	if(a.length == 0) {
		return new tink_core__$Future_SyncFuture(new tink_core__$Lazy_LazyConst(tink_core_Outcome.Success([])));
	} else {
		return tink_core__$Future_Future_$Impl_$.async(function(cb) {
			var result = [];
			var pending = a.length;
			var links = null;
			var linkArray = [];
			var sync = false;
			var i = 0;
			var iter = HxOverrides.iter(a);
			var next = null;
			var done = function(o) {
				if(links == null) {
					sync = true;
				} else if(links != null) {
					links.cancel();
				}
				cb(o);
			};
			var fail = function(e) {
				pending = 0;
				done(tink_core_Outcome.Failure(e));
			};
			var set = function(index,value) {
				result[index] = value;
				if((pending -= 1) == 0) {
					done(tink_core_Outcome.Success(result));
				} else if(iter.hasNext() && pending > 0) {
					next();
				}
			};
			next = function() {
				i += 1;
				var index1 = i - 1;
				var next1 = iter.next().handle(function(o1) {
					switch(o1._hx_index) {
					case 0:
						set(index1,o1.data);
						break;
					case 1:
						fail(o1.failure);
						break;
					}
				});
				linkArray.push(next1);
			};
			while(true) {
				var tmp;
				if(iter.hasNext() && pending > 0) {
					if(concurrency != null) {
						concurrency -= 1;
						tmp = concurrency + 1 > 0;
					} else {
						tmp = true;
					}
				} else {
					tmp = false;
				}
				if(!tmp) {
					break;
				}
				next();
			}
			links = tink_core__$Callback_CallbackLink_$Impl_$.fromMany(linkArray);
			if(sync) {
				if(links != null) {
					links.cancel();
				}
			}
		},lazy);
	}
};
tink_core__$Promise_Promise_$Impl_$.inSequence = function(a) {
	var loop = null;
	loop = function(index) {
		if(index == a.length) {
			return new tink_core__$Future_SyncFuture(new tink_core__$Lazy_LazyConst(tink_core_Outcome.Success([])));
		} else {
			return tink_core__$Promise_Promise_$Impl_$.next(a[index],function(head) {
				return tink_core__$Promise_Promise_$Impl_$.next(loop(index + 1),function(tail) {
					return new tink_core__$Future_SyncFuture(new tink_core__$Lazy_LazyConst(tink_core_Outcome.Success([head].concat(tail))));
				});
			});
		}
	};
	return loop(0);
};
tink_core__$Promise_Promise_$Impl_$.cache = function(gen) {
	var p = null;
	return function() {
		var ret = p;
		if(ret == null) {
			var sync = false;
			ret = tink_core__$Promise_Promise_$Impl_$.next(gen(),function(o) {
				o.b.handle(function(_) {
					sync = true;
					p = null;
				});
				return new tink_core__$Future_SyncFuture(new tink_core__$Lazy_LazyConst(tink_core_Outcome.Success(o.a)));
			});
			if(!sync) {
				p = ret;
			}
		}
		return ret.map(function(o1) {
			if(!tink_core_OutcomeTools.isSuccess(o1)) {
				p = null;
			}
			return o1;
		}).gather();
	};
};
tink_core__$Promise_Promise_$Impl_$.lift = function(p) {
	return p;
};
tink_core__$Promise_Promise_$Impl_$.trigger = function() {
	return new tink_core_FutureTrigger();
};
var tink_core__$Promise_Next_$Impl_$ = {};
tink_core__$Promise_Next_$Impl_$.__name__ = "tink.core._Promise.Next_Impl_";
tink_core__$Promise_Next_$Impl_$.ofSafe = function(f) {
	return function(x) {
		return new tink_core__$Future_SyncFuture(new tink_core__$Lazy_LazyConst(f(x)));
	};
};
tink_core__$Promise_Next_$Impl_$.ofSync = function(f) {
	return function(x) {
		return f(x).map(tink_core_Outcome.Success).gather();
	};
};
tink_core__$Promise_Next_$Impl_$.ofSafeSync = function(f) {
	return function(x) {
		return new tink_core__$Future_SyncFuture(new tink_core__$Lazy_LazyConst(tink_core_Outcome.Success(f(x))));
	};
};
tink_core__$Promise_Next_$Impl_$._chain = function(a,b) {
	return function(v) {
		return tink_core__$Promise_Promise_$Impl_$.next(a(v),b);
	};
};
var tink_core__$Promise_Recover_$Impl_$ = {};
tink_core__$Promise_Recover_$Impl_$.__name__ = "tink.core._Promise.Recover_Impl_";
tink_core__$Promise_Recover_$Impl_$.ofSync = function(f) {
	return function(e) {
		return new tink_core__$Future_SyncFuture(new tink_core__$Lazy_LazyConst(f(e)));
	};
};
var tink_core__$Promise_Combiner_$Impl_$ = {};
tink_core__$Promise_Combiner_$Impl_$.__name__ = "tink.core._Promise.Combiner_Impl_";
tink_core__$Promise_Combiner_$Impl_$.ofSafe = function(f) {
	return function(x1,x2) {
		return new tink_core__$Future_SyncFuture(new tink_core__$Lazy_LazyConst(f(x1,x2)));
	};
};
tink_core__$Promise_Combiner_$Impl_$.ofSync = function(f) {
	return function(x1,x2) {
		return f(x1,x2).map(tink_core_Outcome.Success).gather();
	};
};
tink_core__$Promise_Combiner_$Impl_$.ofSafeSync = function(f) {
	return function(x1,x2) {
		return new tink_core__$Future_SyncFuture(new tink_core__$Lazy_LazyConst(tink_core_Outcome.Success(f(x1,x2))));
	};
};
var tink_core__$Promise_PromiseTrigger_$Impl_$ = {};
tink_core__$Promise_PromiseTrigger_$Impl_$.__name__ = "tink.core._Promise.PromiseTrigger_Impl_";
tink_core__$Promise_PromiseTrigger_$Impl_$._new = function() {
	return new tink_core_FutureTrigger();
};
tink_core__$Promise_PromiseTrigger_$Impl_$.resolve = function(this1,v) {
	return this1.trigger(tink_core_Outcome.Success(v));
};
tink_core__$Promise_PromiseTrigger_$Impl_$.reject = function(this1,e) {
	return this1.trigger(tink_core_Outcome.Failure(e));
};
tink_core__$Promise_PromiseTrigger_$Impl_$.asPromise = function(this1) {
	return this1;
};
var tink_core__$Ref_Ref_$Impl_$ = {};
tink_core__$Ref_Ref_$Impl_$.__name__ = "tink.core._Ref.Ref_Impl_";
tink_core__$Ref_Ref_$Impl_$._new = function() {
	return new Array(1);
};
tink_core__$Ref_Ref_$Impl_$.get_value = function(this1) {
	return this1[0];
};
tink_core__$Ref_Ref_$Impl_$.set_value = function(this1,param) {
	return this1[0] = param;
};
tink_core__$Ref_Ref_$Impl_$.toString = function(this1) {
	return "@[" + Std.string(this1[0]) + "]";
};
tink_core__$Ref_Ref_$Impl_$.to = function(v) {
	var ret = new Array(1);
	ret[0] = v;
	return ret;
};
var tink_core__$Signal_Signal_$Impl_$ = {};
tink_core__$Signal_Signal_$Impl_$.__name__ = "tink.core._Signal.Signal_Impl_";
tink_core__$Signal_Signal_$Impl_$._new = function(f) {
	return new tink_core__$Signal_SimpleSignal(f);
};
tink_core__$Signal_Signal_$Impl_$.map = function(this1,f,gather) {
	if(gather == null) {
		gather = true;
	}
	var ret = new tink_core__$Signal_SimpleSignal(function(cb) {
		return this1.handle(function(result) {
			var this2 = f(result);
			tink_core__$Callback_Callback_$Impl_$.invoke(cb,this2);
		});
	});
	if(gather) {
		return tink_core__$Signal_Signal_$Impl_$.gather(ret);
	} else {
		return ret;
	}
};
tink_core__$Signal_Signal_$Impl_$.flatMap = function(this1,f,gather) {
	if(gather == null) {
		gather = true;
	}
	var ret = new tink_core__$Signal_SimpleSignal(function(cb) {
		return this1.handle(function(result) {
			f(result).handle(cb);
		});
	});
	if(gather) {
		return tink_core__$Signal_Signal_$Impl_$.gather(ret);
	} else {
		return ret;
	}
};
tink_core__$Signal_Signal_$Impl_$.filter = function(this1,f,gather) {
	if(gather == null) {
		gather = true;
	}
	var ret = new tink_core__$Signal_SimpleSignal(function(cb) {
		return this1.handle(function(result) {
			if(f(result)) {
				tink_core__$Callback_Callback_$Impl_$.invoke(cb,result);
			}
		});
	});
	if(gather) {
		return tink_core__$Signal_Signal_$Impl_$.gather(ret);
	} else {
		return ret;
	}
};
tink_core__$Signal_Signal_$Impl_$.select = function(this1,selector,gather) {
	if(gather == null) {
		gather = true;
	}
	var ret = new tink_core__$Signal_SimpleSignal(function(cb) {
		return this1.handle(function(result) {
			var _g = selector(result);
			switch(_g._hx_index) {
			case 0:
				tink_core__$Callback_Callback_$Impl_$.invoke(cb,_g.v);
				break;
			case 1:
				break;
			}
		});
	});
	if(gather) {
		return tink_core__$Signal_Signal_$Impl_$.gather(ret);
	} else {
		return ret;
	}
};
tink_core__$Signal_Signal_$Impl_$.join = function(this1,other,gather) {
	if(gather == null) {
		gather = true;
	}
	var ret = new tink_core__$Signal_SimpleSignal(function(cb) {
		return new tink_core__$Callback_LinkPair(this1.handle(cb),other.handle(cb));
	});
	if(gather) {
		return tink_core__$Signal_Signal_$Impl_$.gather(ret);
	} else {
		return ret;
	}
};
tink_core__$Signal_Signal_$Impl_$.nextTime = function(this1,condition) {
	var ret = new tink_core_FutureTrigger();
	var link = null;
	var immediate = false;
	link = this1.handle(function(v) {
		if(condition == null || condition(v)) {
			ret.trigger(v);
			if(link == null) {
				immediate = true;
			} else if(link != null) {
				link.cancel();
			}
		}
	});
	if(immediate) {
		if(link != null) {
			link.cancel();
		}
	}
	return ret;
};
tink_core__$Signal_Signal_$Impl_$.until = function(this1,end) {
	var ret = new tink_core__$Signal_Suspendable(function($yield) {
		var this2 = this1.handle($yield);
		if(this2 == null) {
			return tink_core__$Callback_CallbackLink_$Impl_$.noop;
		} else {
			return ($_=this2,$bind($_,$_.cancel));
		}
	});
	end.handle(tink_core__$Callback_Callback_$Impl_$.fromNiladic($bind(ret,ret.kill)));
	return ret;
};
tink_core__$Signal_Signal_$Impl_$.next = function(this1,condition) {
	return tink_core__$Signal_Signal_$Impl_$.nextTime(this1,condition);
};
tink_core__$Signal_Signal_$Impl_$.noise = function(this1) {
	return tink_core__$Signal_Signal_$Impl_$.map(this1,function(_) {
		return tink_core_Noise.Noise;
	});
};
tink_core__$Signal_Signal_$Impl_$.gather = function(this1) {
	var ret = tink_core__$Signal_Signal_$Impl_$.trigger();
	this1.handle(function(x) {
		tink_core__$Callback_CallbackList_$Impl_$.invoke(ret.handlers,x);
	});
	return ret;
};
tink_core__$Signal_Signal_$Impl_$.generate = function(generator) {
	var ret = tink_core__$Signal_Signal_$Impl_$.trigger();
	generator($bind(ret,ret.trigger));
	return ret;
};
tink_core__$Signal_Signal_$Impl_$.trigger = function() {
	return new tink_core_SignalTrigger();
};
tink_core__$Signal_Signal_$Impl_$.create = function(create) {
	return new tink_core__$Signal_Suspendable(create);
};
tink_core__$Signal_Signal_$Impl_$.ofClassical = function(add,remove,gather) {
	if(gather == null) {
		gather = true;
	}
	var ret = new tink_core__$Signal_SimpleSignal(function(cb) {
		var f = function(a) {
			tink_core__$Callback_Callback_$Impl_$.invoke(cb,a);
		};
		add(f);
		var f1 = remove;
		var a1 = f;
		return new tink_core__$Callback_SimpleLink(function() {
			f1(a1);
		});
	});
	if(gather) {
		return tink_core__$Signal_Signal_$Impl_$.gather(ret);
	} else {
		return ret;
	}
};
var tink_core_SignalObject = function() { };
tink_core_SignalObject.__name__ = "tink.core.SignalObject";
tink_core_SignalObject.prototype = {
	__class__: tink_core_SignalObject
};
var tink_core__$Signal_SimpleSignal = function(f) {
	this.f = f;
};
tink_core__$Signal_SimpleSignal.__name__ = "tink.core._Signal.SimpleSignal";
tink_core__$Signal_SimpleSignal.__interfaces__ = [tink_core_SignalObject];
tink_core__$Signal_SimpleSignal.prototype = {
	handle: function(cb) {
		return this.f(cb);
	}
	,__class__: tink_core__$Signal_SimpleSignal
};
var tink_core__$Signal_Suspendable = function(activate) {
	this.killed = false;
	this.trigger = new tink_core_SignalTrigger();
	this.activate = activate;
};
tink_core__$Signal_Suspendable.__name__ = "tink.core._Signal.Suspendable";
tink_core__$Signal_Suspendable.__interfaces__ = [tink_core_SignalObject];
tink_core__$Signal_Suspendable.prototype = {
	kill: function() {
		if(!this.killed) {
			this.killed = true;
			this.trigger = null;
		}
	}
	,handle: function(cb) {
		var _gthis = this;
		if(this.killed) {
			return null;
		}
		if(this.trigger.handlers.length == 0) {
			this.suspend = this.activate(($_=this.trigger,$bind($_,$_.trigger)));
		}
		return new tink_core__$Callback_LinkPair(tink_core__$Callback_CallbackList_$Impl_$.add(this.trigger.handlers,cb),new tink_core__$Callback_SimpleLink(function() {
			if(_gthis.trigger.handlers.length == 0) {
				_gthis.suspend();
				_gthis.suspend = null;
			}
		}));
	}
	,__class__: tink_core__$Signal_Suspendable
};
var tink_core_SignalTrigger = function() {
	this.handlers = [];
};
tink_core_SignalTrigger.__name__ = "tink.core.SignalTrigger";
tink_core_SignalTrigger.__interfaces__ = [tink_core_SignalObject];
tink_core_SignalTrigger.prototype = {
	trigger: function(event) {
		tink_core__$Callback_CallbackList_$Impl_$.invoke(this.handlers,event);
	}
	,getLength: function() {
		return this.handlers.length;
	}
	,handle: function(cb) {
		return tink_core__$Callback_CallbackList_$Impl_$.add(this.handlers,cb);
	}
	,clear: function() {
		tink_core__$Callback_CallbackList_$Impl_$.clear(this.handlers);
	}
	,asSignal: function() {
		return this;
	}
	,__class__: tink_core_SignalTrigger
};
var tink_streams__$IdealStream_IdealStream_$Impl_$ = {};
tink_streams__$IdealStream_IdealStream_$Impl_$.__name__ = "tink.streams._IdealStream.IdealStream_Impl_";
tink_streams__$IdealStream_IdealStream_$Impl_$.promiseOfIdealStream = function(p) {
	return tink_streams__$Stream_Stream_$Impl_$.promise(tink_core__$Promise_Promise_$Impl_$.ofSpecific(p));
};
tink_streams__$IdealStream_IdealStream_$Impl_$.promiseOfStreamNoise = function(p) {
	return tink_streams__$Stream_Stream_$Impl_$.promise(p);
};
tink_streams__$IdealStream_IdealStream_$Impl_$.collect = function(this1) {
	var buf = [];
	return this1.forEach(tink_streams__$Stream_Handler_$Impl_$.ofSafe(function(x) {
		buf.push(x);
		return new tink_core__$Future_SyncFuture(new tink_core__$Lazy_LazyConst(tink_streams_Handled.Resume));
	})).map(function(c) {
		return buf;
	}).gather();
};
var tink_streams_StreamObject = function() { };
tink_streams_StreamObject.__name__ = "tink.streams.StreamObject";
tink_streams_StreamObject.prototype = {
	__class__: tink_streams_StreamObject
};
var tink_streams_StreamBase = function() {
	this.retainCount = 0;
};
tink_streams_StreamBase.__name__ = "tink.streams.StreamBase";
tink_streams_StreamBase.__interfaces__ = [tink_streams_StreamObject];
tink_streams_StreamBase.prototype = {
	get_depleted: function() {
		return false;
	}
	,retain: function() {
		var _gthis = this;
		this.retainCount++;
		var retained = true;
		return function() {
			if(retained) {
				retained = false;
				--_gthis.retainCount;
			}
		};
	}
	,next: function() {
		throw new js__$Boot_HaxeError("not implemented");
	}
	,regroup: function(f) {
		return new tink_streams__$Stream_RegroupStream(this,f);
	}
	,map: function(f) {
		return this.regroup(f);
	}
	,filter: function(f) {
		return this.regroup(f);
	}
	,destroy: function() {
	}
	,append: function(other) {
		if(this.get_depleted()) {
			return other;
		} else {
			return tink_streams__$Stream_CompoundStream.of([this,other]);
		}
	}
	,prepend: function(other) {
		if(this.get_depleted()) {
			return other;
		} else {
			return tink_streams__$Stream_CompoundStream.of([other,this]);
		}
	}
	,blend: function(other) {
		if(this.get_depleted()) {
			return other;
		} else {
			return new tink_streams_BlendStream(this,other);
		}
	}
	,decompose: function(into) {
		if(!this.get_depleted()) {
			into.push(this);
		}
	}
	,idealize: function(rescue) {
		if(this.get_depleted()) {
			return tink_streams_Empty.inst;
		} else {
			return new tink_streams_IdealizeStream(this,rescue);
		}
	}
	,reduce: function(initial,reducer) {
		var _gthis = this;
		return tink_core__$Future_Future_$Impl_$.async(function(cb) {
			_gthis.forEach(tink_streams__$Stream_Handler_$Impl_$.ofUnknown(function(item) {
				return reducer(initial,item).map(function(o) {
					switch(o._hx_index) {
					case 0:
						initial = o.result;
						return tink_streams_Handled.Resume;
					case 1:
						return tink_streams_Handled.Clog(o.e);
					}
				}).gather();
			})).handle(function(c) {
				switch(c._hx_index) {
				case 0:
					throw new js__$Boot_HaxeError("assert");
				case 1:
					cb(tink_streams_Reduction.Crashed(c.error,c.at));
					break;
				case 2:
					cb(tink_streams_Reduction.Failed(c.error));
					break;
				case 3:
					cb(tink_streams_Reduction.Reduced(initial));
					break;
				}
			});
		},true);
	}
	,forEach: function(handler) {
		throw new js__$Boot_HaxeError("not implemented");
	}
	,__class__: tink_streams_StreamBase
};
var tink_streams_IdealStreamBase = function() {
	tink_streams_StreamBase.call(this);
};
tink_streams_IdealStreamBase.__name__ = "tink.streams.IdealStreamBase";
tink_streams_IdealStreamBase.__super__ = tink_streams_StreamBase;
tink_streams_IdealStreamBase.prototype = $extend(tink_streams_StreamBase.prototype,{
	idealize: function(rescue) {
		return this;
	}
	,__class__: tink_streams_IdealStreamBase
});
var tink_streams__$RealStream_RealStream_$Impl_$ = {};
tink_streams__$RealStream_RealStream_$Impl_$.__name__ = "tink.streams._RealStream.RealStream_Impl_";
tink_streams__$RealStream_RealStream_$Impl_$.promiseOfIdealStream = function(p) {
	return tink_streams__$Stream_Stream_$Impl_$.promise(tink_core__$Promise_Promise_$Impl_$.ofSpecific(p));
};
tink_streams__$RealStream_RealStream_$Impl_$.promiseOfStreamNoise = function(p) {
	return tink_streams__$Stream_Stream_$Impl_$.promise(p);
};
tink_streams__$RealStream_RealStream_$Impl_$.promiseOfRealStream = function(p) {
	return tink_streams__$Stream_Stream_$Impl_$.promise(tink_core__$Promise_Promise_$Impl_$.ofSpecific(p));
};
tink_streams__$RealStream_RealStream_$Impl_$.promiseOfStreamError = function(p) {
	return tink_streams__$Stream_Stream_$Impl_$.promise(p);
};
tink_streams__$RealStream_RealStream_$Impl_$.collect = function(this1) {
	var buf = [];
	return this1.forEach(tink_streams__$Stream_Handler_$Impl_$.ofSafe(function(x) {
		buf.push(x);
		return new tink_core__$Future_SyncFuture(new tink_core__$Lazy_LazyConst(tink_streams_Handled.Resume));
	})).map(function(c) {
		switch(c._hx_index) {
		case 0:
			throw new js__$Boot_HaxeError("unreachable");
		case 2:
			return tink_core_Outcome.Failure(c.error);
		case 3:
			return tink_core_Outcome.Success(buf);
		}
	}).gather();
};
var tink_streams__$Stream_Stream_$Impl_$ = {};
tink_streams__$Stream_Stream_$Impl_$.__name__ = "tink.streams._Stream.Stream_Impl_";
tink_streams__$Stream_Stream_$Impl_$.get_depleted = function(this1) {
	return this1.get_depleted();
};
tink_streams__$Stream_Stream_$Impl_$.dirty = function(this1) {
	return this1;
};
tink_streams__$Stream_Stream_$Impl_$.single = function(i) {
	return new tink_streams_Single(new tink_core__$Lazy_LazyConst(i));
};
tink_streams__$Stream_Stream_$Impl_$.ofIterator = function(i) {
	var next = null;
	next = function(step) {
		step(i.hasNext() ? tink_streams_Step.Link(i.next(),tink_streams_Generator.stream(next)) : tink_streams_Step.End);
	};
	return tink_streams_Generator.stream(next);
};
tink_streams__$Stream_Stream_$Impl_$.flatten = function(f) {
	return new tink_streams_FutureStream(f);
};
tink_streams__$Stream_Stream_$Impl_$.promiseIdeal = function(f) {
	return tink_streams__$Stream_Stream_$Impl_$.promise(tink_core__$Promise_Promise_$Impl_$.ofSpecific(f));
};
tink_streams__$Stream_Stream_$Impl_$.promiseReal = function(f) {
	return tink_streams__$Stream_Stream_$Impl_$.promise(tink_core__$Promise_Promise_$Impl_$.ofSpecific(f));
};
tink_streams__$Stream_Stream_$Impl_$.promise = function(f) {
	return tink_streams__$Stream_Stream_$Impl_$.flatten(f.map(function(o) {
		switch(o._hx_index) {
		case 0:
			return tink_streams__$Stream_Stream_$Impl_$.dirty(o.data);
		case 1:
			return tink_streams__$Stream_Stream_$Impl_$.ofError(o.failure);
		}
	}).gather());
};
tink_streams__$Stream_Stream_$Impl_$.ofError = function(e) {
	return new tink_streams__$Stream_ErrorStream(e);
};
var tink_streams_RegroupStatus = $hxEnums["tink.streams.RegroupStatus"] = { __ename__ : true, __constructs__ : ["Flowing","Errored","Ended"]
	,Flowing: {_hx_index:0,__enum__:"tink.streams.RegroupStatus",toString:$estr}
	,Errored: ($_=function(e) { return {_hx_index:1,e:e,__enum__:"tink.streams.RegroupStatus",toString:$estr}; },$_.__params__ = ["e"],$_)
	,Ended: {_hx_index:2,__enum__:"tink.streams.RegroupStatus",toString:$estr}
};
var tink_streams_RegroupResult = $hxEnums["tink.streams.RegroupResult"] = { __ename__ : true, __constructs__ : ["Converted","Terminated","Untouched","Errored"]
	,Converted: ($_=function(data) { return {_hx_index:0,data:data,__enum__:"tink.streams.RegroupResult",toString:$estr}; },$_.__params__ = ["data"],$_)
	,Terminated: ($_=function(data) { return {_hx_index:1,data:data,__enum__:"tink.streams.RegroupResult",toString:$estr}; },$_.__params__ = ["data"],$_)
	,Untouched: {_hx_index:2,__enum__:"tink.streams.RegroupResult",toString:$estr}
	,Errored: ($_=function(e) { return {_hx_index:3,e:e,__enum__:"tink.streams.RegroupResult",toString:$estr}; },$_.__params__ = ["e"],$_)
};
var tink_streams__$Stream_Regrouper_$Impl_$ = {};
tink_streams__$Stream_Regrouper_$Impl_$.__name__ = "tink.streams._Stream.Regrouper_Impl_";
tink_streams__$Stream_Regrouper_$Impl_$.ofIgnorance = function(f) {
	return { apply : function(i,_) {
		return f(i);
	}};
};
tink_streams__$Stream_Regrouper_$Impl_$.ofIgnoranceSync = function(f) {
	return { apply : function(i,_) {
		return new tink_core__$Future_SyncFuture(new tink_core__$Lazy_LazyConst(f(i)));
	}};
};
tink_streams__$Stream_Regrouper_$Impl_$.ofFunc = function(f) {
	return { apply : f};
};
tink_streams__$Stream_Regrouper_$Impl_$.ofFuncSync = function(f) {
	return { apply : function(i,s) {
		return new tink_core__$Future_SyncFuture(new tink_core__$Lazy_LazyConst(f(i,s)));
	}};
};
var tink_streams__$Stream_CompoundStream = function(parts) {
	tink_streams_StreamBase.call(this);
	this.parts = parts;
};
tink_streams__$Stream_CompoundStream.__name__ = "tink.streams._Stream.CompoundStream";
tink_streams__$Stream_CompoundStream.consumeParts = function(parts,handler,cb) {
	if(parts.length == 0) {
		cb(tink_streams_Conclusion.Depleted);
	} else {
		parts[0].forEach(handler).handle(function(o) {
			switch(o._hx_index) {
			case 0:
				parts = parts.slice();
				parts[0] = o.rest;
				cb(tink_streams_Conclusion.Halted(new tink_streams__$Stream_CompoundStream(parts)));
				break;
			case 1:
				var at = o.at;
				if(at.get_depleted()) {
					parts = parts.slice(1);
				} else {
					parts = parts.slice();
					parts[0] = at;
				}
				cb(tink_streams_Conclusion.Clogged(o.error,new tink_streams__$Stream_CompoundStream(parts)));
				break;
			case 2:
				cb(tink_streams_Conclusion.Failed(o.error));
				break;
			case 3:
				tink_streams__$Stream_CompoundStream.consumeParts(parts.slice(1),handler,cb);
				break;
			}
		});
	}
};
tink_streams__$Stream_CompoundStream.of = function(streams) {
	var ret = [];
	var _g = 0;
	while(_g < streams.length) streams[_g++].decompose(ret);
	if(ret.length == 0) {
		return tink_streams_Empty.inst;
	} else {
		return new tink_streams__$Stream_CompoundStream(ret);
	}
};
tink_streams__$Stream_CompoundStream.__super__ = tink_streams_StreamBase;
tink_streams__$Stream_CompoundStream.prototype = $extend(tink_streams_StreamBase.prototype,{
	get_depleted: function() {
		switch(this.parts.length) {
		case 0:
			return true;
		case 1:
			return this.parts[0].get_depleted();
		default:
			return false;
		}
	}
	,next: function() {
		var _gthis = this;
		if(this.parts.length == 0) {
			return new tink_core__$Future_SyncFuture(new tink_core__$Lazy_LazyConst(tink_streams_Step.End));
		} else {
			return this.parts[0].next().flatMap(function(v) {
				switch(v._hx_index) {
				case 0:
					var copy = _gthis.parts.slice();
					copy[0] = v.next;
					return new tink_core__$Future_SyncFuture(new tink_core__$Lazy_LazyConst(tink_streams_Step.Link(v.value,new tink_streams__$Stream_CompoundStream(copy))));
				case 2:
					if(_gthis.parts.length > 1) {
						return _gthis.parts[1].next();
					} else {
						return new tink_core__$Future_SyncFuture(new tink_core__$Lazy_LazyConst(v));
					}
					break;
				default:
					return new tink_core__$Future_SyncFuture(new tink_core__$Lazy_LazyConst(v));
				}
			}).gather();
		}
	}
	,decompose: function(into) {
		var _g = 0;
		var _g1 = this.parts;
		while(_g < _g1.length) _g1[_g++].decompose(into);
	}
	,forEach: function(handler) {
		var parts = this.parts;
		var handler1 = handler;
		return tink_core__$Future_Future_$Impl_$.async(function(cb) {
			tink_streams__$Stream_CompoundStream.consumeParts(parts,handler1,cb);
		});
	}
	,__class__: tink_streams__$Stream_CompoundStream
});
var tink_streams__$Stream_RegroupStream = function(source,f,prev) {
	if(prev == null) {
		prev = tink_streams_Empty.inst;
	}
	var ret = null;
	var terminated = false;
	var buf = [];
	tink_streams__$Stream_CompoundStream.call(this,[prev,tink_streams__$Stream_Stream_$Impl_$.flatten(source.forEach(tink_streams__$Stream_Handler_$Impl_$.ofUnknown(function(item) {
		buf.push(item);
		return f.apply(buf,tink_streams_RegroupStatus.Flowing).map(function(o) {
			switch(o._hx_index) {
			case 0:
				ret = o.data;
				return tink_streams_Handled.Finish;
			case 1:
				var v = o.data;
				ret = v._hx_index == 0 ? v.v : new tink_core__$Lazy_LazyFunc(tink_streams_Empty.make).get();
				terminated = true;
				return tink_streams_Handled.Finish;
			case 2:
				return tink_streams_Handled.Resume;
			case 3:
				return tink_streams_Handled.Clog(o.e);
			}
		}).gather();
	})).map(function(o1) {
		switch(o1._hx_index) {
		case 0:
			if(terminated) {
				return ret;
			} else {
				return new tink_streams__$Stream_RegroupStream(o1.rest,f,ret);
			}
			break;
		case 1:
			return new tink_streams__$Stream_CloggedStream(tink_streams__$Stream_Stream_$Impl_$.ofError(o1.error),o1.at);
		case 2:
			return tink_streams__$Stream_Stream_$Impl_$.ofError(o1.error);
		case 3:
			if(buf.length == 0) {
				return tink_streams_Empty.inst;
			} else {
				return tink_streams__$Stream_Stream_$Impl_$.flatten(f.apply(buf,tink_streams_RegroupStatus.Ended).map(function(o2) {
					switch(o2._hx_index) {
					case 0:
						return o2.data;
					case 1:
						var v1 = o2.data;
						if(v1._hx_index == 0) {
							return v1.v;
						} else {
							return new tink_core__$Lazy_LazyFunc(tink_streams_Empty.make).get();
						}
						break;
					case 2:
						return tink_streams_Empty.inst;
					case 3:
						return tink_streams__$Stream_Stream_$Impl_$.ofError(o2.e);
					}
				}).gather());
			}
			break;
		}
	}).gather())]);
};
tink_streams__$Stream_RegroupStream.__name__ = "tink.streams._Stream.RegroupStream";
tink_streams__$Stream_RegroupStream.__super__ = tink_streams__$Stream_CompoundStream;
tink_streams__$Stream_RegroupStream.prototype = $extend(tink_streams__$Stream_CompoundStream.prototype,{
	__class__: tink_streams__$Stream_RegroupStream
});
var tink_streams_Handled = $hxEnums["tink.streams.Handled"] = { __ename__ : true, __constructs__ : ["BackOff","Finish","Resume","Clog"]
	,BackOff: {_hx_index:0,__enum__:"tink.streams.Handled",toString:$estr}
	,Finish: {_hx_index:1,__enum__:"tink.streams.Handled",toString:$estr}
	,Resume: {_hx_index:2,__enum__:"tink.streams.Handled",toString:$estr}
	,Clog: ($_=function(e) { return {_hx_index:3,e:e,__enum__:"tink.streams.Handled",toString:$estr}; },$_.__params__ = ["e"],$_)
};
var tink_streams_Conclusion = $hxEnums["tink.streams.Conclusion"] = { __ename__ : true, __constructs__ : ["Halted","Clogged","Failed","Depleted"]
	,Halted: ($_=function(rest) { return {_hx_index:0,rest:rest,__enum__:"tink.streams.Conclusion",toString:$estr}; },$_.__params__ = ["rest"],$_)
	,Clogged: ($_=function(error,at) { return {_hx_index:1,error:error,at:at,__enum__:"tink.streams.Conclusion",toString:$estr}; },$_.__params__ = ["error","at"],$_)
	,Failed: ($_=function(error) { return {_hx_index:2,error:error,__enum__:"tink.streams.Conclusion",toString:$estr}; },$_.__params__ = ["error"],$_)
	,Depleted: {_hx_index:3,__enum__:"tink.streams.Conclusion",toString:$estr}
};
var tink_streams_ReductionStep = $hxEnums["tink.streams.ReductionStep"] = { __ename__ : true, __constructs__ : ["Progress","Crash"]
	,Progress: ($_=function(result) { return {_hx_index:0,result:result,__enum__:"tink.streams.ReductionStep",toString:$estr}; },$_.__params__ = ["result"],$_)
	,Crash: ($_=function(e) { return {_hx_index:1,e:e,__enum__:"tink.streams.ReductionStep",toString:$estr}; },$_.__params__ = ["e"],$_)
};
var tink_streams_Reduction = $hxEnums["tink.streams.Reduction"] = { __ename__ : true, __constructs__ : ["Crashed","Failed","Reduced"]
	,Crashed: ($_=function(error,at) { return {_hx_index:0,error:error,at:at,__enum__:"tink.streams.Reduction",toString:$estr}; },$_.__params__ = ["error","at"],$_)
	,Failed: ($_=function(error) { return {_hx_index:1,error:error,__enum__:"tink.streams.Reduction",toString:$estr}; },$_.__params__ = ["error"],$_)
	,Reduced: ($_=function(result) { return {_hx_index:2,result:result,__enum__:"tink.streams.Reduction",toString:$estr}; },$_.__params__ = ["result"],$_)
};
var tink_streams__$Stream_CloggedStream = function(rest,error) {
	tink_streams_StreamBase.call(this);
	this.rest = rest;
	this.error = error;
};
tink_streams__$Stream_CloggedStream.__name__ = "tink.streams._Stream.CloggedStream";
tink_streams__$Stream_CloggedStream.__super__ = tink_streams_StreamBase;
tink_streams__$Stream_CloggedStream.prototype = $extend(tink_streams_StreamBase.prototype,{
	next: function() {
		return new tink_core__$Future_SyncFuture(new tink_core__$Lazy_LazyConst(tink_streams_Step.Fail(this.error)));
	}
	,forEach: function(handler) {
		return new tink_core__$Future_SyncFuture(new tink_core__$Lazy_LazyConst(tink_streams_Conclusion.Clogged(this.error,this.rest)));
	}
	,__class__: tink_streams__$Stream_CloggedStream
});
var tink_streams__$Stream_ErrorStream = function(error) {
	tink_streams_StreamBase.call(this);
	this.error = error;
};
tink_streams__$Stream_ErrorStream.__name__ = "tink.streams._Stream.ErrorStream";
tink_streams__$Stream_ErrorStream.__super__ = tink_streams_StreamBase;
tink_streams__$Stream_ErrorStream.prototype = $extend(tink_streams_StreamBase.prototype,{
	next: function() {
		return new tink_core__$Future_SyncFuture(new tink_core__$Lazy_LazyConst(tink_streams_Step.Fail(this.error)));
	}
	,forEach: function(handler) {
		return new tink_core__$Future_SyncFuture(new tink_core__$Lazy_LazyConst(tink_streams_Conclusion.Failed(this.error)));
	}
	,__class__: tink_streams__$Stream_ErrorStream
});
var tink_streams_Empty = function() {
	tink_streams_StreamBase.call(this);
};
tink_streams_Empty.__name__ = "tink.streams.Empty";
tink_streams_Empty.make = function() {
	return tink_streams_Empty.inst;
};
tink_streams_Empty.__super__ = tink_streams_StreamBase;
tink_streams_Empty.prototype = $extend(tink_streams_StreamBase.prototype,{
	get_depleted: function() {
		return true;
	}
	,next: function() {
		return new tink_core__$Future_SyncFuture(new tink_core__$Lazy_LazyConst(tink_streams_Step.End));
	}
	,forEach: function(handler) {
		return new tink_core__$Future_SyncFuture(new tink_core__$Lazy_LazyConst(tink_streams_Conclusion.Depleted));
	}
	,__class__: tink_streams_Empty
});
var tink_streams__$Stream_Mapping_$Impl_$ = {};
tink_streams__$Stream_Mapping_$Impl_$.__name__ = "tink.streams._Stream.Mapping_Impl_";
tink_streams__$Stream_Mapping_$Impl_$._new = function(o) {
	return o;
};
tink_streams__$Stream_Mapping_$Impl_$.ofNext = function(n) {
	return { apply : function(i,_) {
		var this1 = tink_core__$Promise_Promise_$Impl_$.next(n(i[0]),function(o) {
			return new tink_core__$Future_SyncFuture(new tink_core__$Lazy_LazyConst(tink_core_Outcome.Success(tink_streams_RegroupResult.Converted(tink_streams__$Stream_Stream_$Impl_$.single(o)))));
		});
		var f = tink_core__$Promise_Recover_$Impl_$.ofSync(tink_streams_RegroupResult.Errored);
		return this1.flatMap(function(o1) {
			switch(o1._hx_index) {
			case 0:
				return new tink_core__$Future_SyncFuture(new tink_core__$Lazy_LazyConst(o1.data));
			case 1:
				return f(o1.failure);
			}
		}).gather();
	}};
};
tink_streams__$Stream_Mapping_$Impl_$.ofAsync = function(f) {
	return { apply : function(i,_) {
		return f(i[0]).map(function(o) {
			return tink_streams_RegroupResult.Converted(tink_streams__$Stream_Stream_$Impl_$.single(o));
		}).gather();
	}};
};
tink_streams__$Stream_Mapping_$Impl_$.ofSync = function(f) {
	return { apply : function(i,_) {
		var v;
		var _g = f(i[0]);
		switch(_g._hx_index) {
		case 0:
			v = tink_streams_RegroupResult.Converted(tink_streams__$Stream_Stream_$Impl_$.single(_g.data));
			break;
		case 1:
			v = tink_streams_RegroupResult.Errored(_g.failure);
			break;
		}
		return new tink_core__$Future_SyncFuture(new tink_core__$Lazy_LazyConst(v));
	}};
};
tink_streams__$Stream_Mapping_$Impl_$.ofPlain = function(f) {
	return { apply : function(i,_) {
		return new tink_core__$Future_SyncFuture(new tink_core__$Lazy_LazyConst(tink_streams_RegroupResult.Converted(tink_streams__$Stream_Stream_$Impl_$.single(f(i[0])))));
	}};
};
var tink_streams__$Stream_Filter_$Impl_$ = {};
tink_streams__$Stream_Filter_$Impl_$.__name__ = "tink.streams._Stream.Filter_Impl_";
tink_streams__$Stream_Filter_$Impl_$._new = function(o) {
	return o;
};
tink_streams__$Stream_Filter_$Impl_$.ofNext = function(n) {
	return { apply : function(i,_) {
		var this1 = tink_core__$Promise_Promise_$Impl_$.next(n(i[0]),function(matched) {
			return new tink_core__$Future_SyncFuture(new tink_core__$Lazy_LazyConst(tink_core_Outcome.Success(tink_streams_RegroupResult.Converted(matched ? tink_streams__$Stream_Stream_$Impl_$.single(i[0]) : tink_streams_Empty.inst))));
		});
		var f = tink_core__$Promise_Recover_$Impl_$.ofSync(tink_streams_RegroupResult.Errored);
		return this1.flatMap(function(o) {
			switch(o._hx_index) {
			case 0:
				return new tink_core__$Future_SyncFuture(new tink_core__$Lazy_LazyConst(o.data));
			case 1:
				return f(o.failure);
			}
		}).gather();
	}};
};
tink_streams__$Stream_Filter_$Impl_$.ofAsync = function(f) {
	return { apply : function(i,_) {
		return f(i[0]).map(function(matched) {
			return tink_streams_RegroupResult.Converted(matched ? tink_streams__$Stream_Stream_$Impl_$.single(i[0]) : tink_streams_Empty.inst);
		}).gather();
	}};
};
tink_streams__$Stream_Filter_$Impl_$.ofSync = function(f) {
	return { apply : function(i,_) {
		var v;
		var _g = f(i[0]);
		switch(_g._hx_index) {
		case 0:
			v = tink_streams_RegroupResult.Converted(_g.data ? tink_streams__$Stream_Stream_$Impl_$.single(i[0]) : tink_streams_Empty.inst);
			break;
		case 1:
			v = tink_streams_RegroupResult.Errored(_g.failure);
			break;
		}
		return new tink_core__$Future_SyncFuture(new tink_core__$Lazy_LazyConst(v));
	}};
};
tink_streams__$Stream_Filter_$Impl_$.ofPlain = function(f) {
	return { apply : function(i,_) {
		return new tink_core__$Future_SyncFuture(new tink_core__$Lazy_LazyConst(tink_streams_RegroupResult.Converted(f(i[0]) ? tink_streams__$Stream_Stream_$Impl_$.single(i[0]) : tink_streams_Empty.inst)));
	}};
};
var tink_streams_IdealizeStream = function(target,rescue) {
	tink_streams_IdealStreamBase.call(this);
	this.target = target;
	this.rescue = rescue;
};
tink_streams_IdealizeStream.__name__ = "tink.streams.IdealizeStream";
tink_streams_IdealizeStream.__super__ = tink_streams_IdealStreamBase;
tink_streams_IdealizeStream.prototype = $extend(tink_streams_IdealStreamBase.prototype,{
	get_depleted: function() {
		return this.target.get_depleted();
	}
	,next: function() {
		var _gthis = this;
		return this.target.next().flatMap(function(v) {
			if(v._hx_index == 1) {
				return _gthis.rescue(v.e).idealize(_gthis.rescue).next();
			} else {
				return new tink_core__$Future_SyncFuture(new tink_core__$Lazy_LazyConst(v));
			}
		}).gather();
	}
	,forEach: function(handler) {
		var _gthis = this;
		return tink_core__$Future_Future_$Impl_$.async(function(cb) {
			_gthis.target.forEach(handler).handle(function(end) {
				switch(end._hx_index) {
				case 0:
					var tmp = tink_streams_Conclusion.Halted(end.rest.idealize(_gthis.rescue));
					cb(tmp);
					break;
				case 1:
					var tmp1 = tink_streams_Conclusion.Clogged(end.error,end.at.idealize(_gthis.rescue));
					cb(tmp1);
					break;
				case 2:
					_gthis.rescue(end.error).idealize(_gthis.rescue).forEach(handler).handle(cb);
					break;
				case 3:
					cb(tink_streams_Conclusion.Depleted);
					break;
				}
			});
		});
	}
	,__class__: tink_streams_IdealizeStream
});
var tink_streams_Single = function(value) {
	tink_streams_StreamBase.call(this);
	this.value = value;
};
tink_streams_Single.__name__ = "tink.streams.Single";
tink_streams_Single.__super__ = tink_streams_StreamBase;
tink_streams_Single.prototype = $extend(tink_streams_StreamBase.prototype,{
	next: function() {
		return new tink_core__$Future_SyncFuture(new tink_core__$Lazy_LazyConst(tink_streams_Step.Link(this.value.get(),tink_streams_Empty.inst)));
	}
	,forEach: function(handle) {
		var _gthis = this;
		return handle(this.value.get()).map(function(step) {
			switch(step._hx_index) {
			case 0:
				return tink_streams_Conclusion.Halted(_gthis);
			case 1:
				return tink_streams_Conclusion.Halted(tink_streams_Empty.inst);
			case 2:
				return tink_streams_Conclusion.Depleted;
			case 3:
				return tink_streams_Conclusion.Clogged(step.e,_gthis);
			}
		}).gather();
	}
	,__class__: tink_streams_Single
});
var tink_streams__$Stream_Handler_$Impl_$ = {};
tink_streams__$Stream_Handler_$Impl_$.__name__ = "tink.streams._Stream.Handler_Impl_";
tink_streams__$Stream_Handler_$Impl_$._new = function(f) {
	return f;
};
tink_streams__$Stream_Handler_$Impl_$.apply = function(this1,item) {
	return this1(item);
};
tink_streams__$Stream_Handler_$Impl_$.ofSafeSync = function(f) {
	return function(i) {
		return new tink_core__$Future_SyncFuture(new tink_core__$Lazy_LazyConst(f(i)));
	};
};
tink_streams__$Stream_Handler_$Impl_$.ofUnknownSync = function(f) {
	return function(i) {
		return new tink_core__$Future_SyncFuture(new tink_core__$Lazy_LazyConst(f(i)));
	};
};
tink_streams__$Stream_Handler_$Impl_$.ofSafe = function(f) {
	return f;
};
tink_streams__$Stream_Handler_$Impl_$.ofUnknown = function(f) {
	return f;
};
var tink_streams__$Stream_Reducer_$Impl_$ = {};
tink_streams__$Stream_Reducer_$Impl_$.__name__ = "tink.streams._Stream.Reducer_Impl_";
tink_streams__$Stream_Reducer_$Impl_$._new = function(f) {
	return f;
};
tink_streams__$Stream_Reducer_$Impl_$.apply = function(this1,res,item) {
	return this1(res,item);
};
tink_streams__$Stream_Reducer_$Impl_$.ofSafeSync = function(f) {
	return function(res,cur) {
		return new tink_core__$Future_SyncFuture(new tink_core__$Lazy_LazyConst(f(res,cur)));
	};
};
tink_streams__$Stream_Reducer_$Impl_$.ofUnknownSync = function(f) {
	return function(res,cur) {
		return new tink_core__$Future_SyncFuture(new tink_core__$Lazy_LazyConst(f(res,cur)));
	};
};
tink_streams__$Stream_Reducer_$Impl_$.ofSafe = function(f) {
	return f;
};
tink_streams__$Stream_Reducer_$Impl_$.ofPlainSync = function(f) {
	return function(res,cur) {
		return new tink_core__$Future_SyncFuture(new tink_core__$Lazy_LazyConst(tink_streams_ReductionStep.Progress(f(res,cur))));
	};
};
tink_streams__$Stream_Reducer_$Impl_$.ofUnknown = function(f) {
	return f;
};
tink_streams__$Stream_Reducer_$Impl_$.ofPromiseBased = function(f) {
	return function(res,cur) {
		return f(res,cur).map(function(s) {
			switch(s._hx_index) {
			case 0:
				return tink_streams_ReductionStep.Progress(s.data);
			case 1:
				return tink_streams_ReductionStep.Crash(s.failure);
			}
		}).gather();
	};
};
var tink_streams_FutureStream = function(f) {
	tink_streams_StreamBase.call(this);
	this.f = f;
};
tink_streams_FutureStream.__name__ = "tink.streams.FutureStream";
tink_streams_FutureStream.__super__ = tink_streams_StreamBase;
tink_streams_FutureStream.prototype = $extend(tink_streams_StreamBase.prototype,{
	next: function() {
		return this.f.flatMap(function(s) {
			return s.next();
		}).gather();
	}
	,forEach: function(handler) {
		var _gthis = this;
		return tink_core__$Future_Future_$Impl_$.async(function(cb) {
			_gthis.f.handle(function(s) {
				s.forEach(handler).handle(cb);
			});
		});
	}
	,__class__: tink_streams_FutureStream
});
var tink_streams_Generator = function(upcoming) {
	tink_streams_StreamBase.call(this);
	this.upcoming = upcoming;
};
tink_streams_Generator.__name__ = "tink.streams.Generator";
tink_streams_Generator.stream = function(step) {
	return new tink_streams_Generator(tink_core__$Future_Future_$Impl_$.async(step,true));
};
tink_streams_Generator.__super__ = tink_streams_StreamBase;
tink_streams_Generator.prototype = $extend(tink_streams_StreamBase.prototype,{
	next: function() {
		return this.upcoming;
	}
	,forEach: function(handler) {
		var _gthis = this;
		return tink_core__$Future_Future_$Impl_$.async(function(cb) {
			_gthis.upcoming.handle(function(e) {
				switch(e._hx_index) {
				case 0:
					var then = e.next;
					handler(e.value).handle(function(s) {
						switch(s._hx_index) {
						case 0:
							cb(tink_streams_Conclusion.Halted(_gthis));
							break;
						case 1:
							cb(tink_streams_Conclusion.Halted(then));
							break;
						case 2:
							then.forEach(handler).handle(cb);
							break;
						case 3:
							cb(tink_streams_Conclusion.Clogged(s.e,_gthis));
							break;
						}
					});
					break;
				case 1:
					cb(tink_streams_Conclusion.Failed(e.e));
					break;
				case 2:
					cb(tink_streams_Conclusion.Depleted);
					break;
				}
			});
		},true);
	}
	,__class__: tink_streams_Generator
});
var tink_streams_BlendStream = function(a,b) {
	var first = null;
	var wait = function(s) {
		return s.next().map(function(o) {
			if(first == null) {
				first = s;
			}
			return o;
		}).gather();
	};
	var n1 = wait(a);
	var n2 = wait(b);
	tink_streams_Generator.call(this,tink_core__$Future_Future_$Impl_$.async(function(cb) {
		tink_core__$Future_Future_$Impl_$.first(n1,n2).handle(function(o1) {
			switch(o1._hx_index) {
			case 0:
				var tmp = tink_streams_Step.Link(o1.value,new tink_streams_BlendStream(o1.next,first == a ? b : a));
				cb(tmp);
				break;
			case 1:
				cb(tink_streams_Step.Fail(o1.e));
				break;
			case 2:
				(first == a ? n2 : n1).handle(cb);
				break;
			}
		});
	}));
};
tink_streams_BlendStream.__name__ = "tink.streams.BlendStream";
tink_streams_BlendStream.__super__ = tink_streams_Generator;
tink_streams_BlendStream.prototype = $extend(tink_streams_Generator.prototype,{
	__class__: tink_streams_BlendStream
});
var tink_streams_Step = $hxEnums["tink.streams.Step"] = { __ename__ : true, __constructs__ : ["Link","Fail","End"]
	,Link: ($_=function(value,next) { return {_hx_index:0,value:value,next:next,__enum__:"tink.streams.Step",toString:$estr}; },$_.__params__ = ["value","next"],$_)
	,Fail: ($_=function(e) { return {_hx_index:1,e:e,__enum__:"tink.streams.Step",toString:$estr}; },$_.__params__ = ["e"],$_)
	,End: {_hx_index:2,__enum__:"tink.streams.Step",toString:$estr}
};
var tink_streams_SignalStream = function(signal) {
	tink_streams_Generator.call(this,tink_core__$Signal_Signal_$Impl_$.nextTime(signal).map(function(o) {
		switch(o._hx_index) {
		case 0:
			return tink_streams_Step.Link(o.data,new tink_streams_SignalStream(signal));
		case 1:
			return tink_streams_Step.Fail(o.e);
		case 2:
			return tink_streams_Step.End;
		}
	}).gather());
};
tink_streams_SignalStream.__name__ = "tink.streams.SignalStream";
tink_streams_SignalStream.__super__ = tink_streams_Generator;
tink_streams_SignalStream.prototype = $extend(tink_streams_Generator.prototype,{
	__class__: tink_streams_SignalStream
});
var tink_streams_Yield = $hxEnums["tink.streams.Yield"] = { __ename__ : true, __constructs__ : ["Data","Fail","End"]
	,Data: ($_=function(data) { return {_hx_index:0,data:data,__enum__:"tink.streams.Yield",toString:$estr}; },$_.__params__ = ["data"],$_)
	,Fail: ($_=function(e) { return {_hx_index:1,e:e,__enum__:"tink.streams.Yield",toString:$estr}; },$_.__params__ = ["e"],$_)
	,End: {_hx_index:2,__enum__:"tink.streams.Yield",toString:$estr}
};
var tink_testrunner_Assertion = function(holds,description,pos) {
	this.holds = holds;
	this.description = description;
	this.pos = pos;
};
tink_testrunner_Assertion.__name__ = "tink.testrunner.Assertion";
tink_testrunner_Assertion.prototype = {
	__class__: tink_testrunner_Assertion
};
var tink_testrunner__$Assertion_AssertionResult_$Impl_$ = {};
tink_testrunner__$Assertion_AssertionResult_$Impl_$.__name__ = "tink.testrunner._Assertion.AssertionResult_Impl_";
tink_testrunner__$Assertion_AssertionResult_$Impl_$.ofBool = function(v) {
	if(v) {
		return tink_core_Outcome.Success(tink_core_Noise.Noise);
	} else {
		return tink_core_Outcome.Failure(null);
	}
};
tink_testrunner__$Assertion_AssertionResult_$Impl_$.ofOutcome = function(v) {
	switch(v._hx_index) {
	case 0:
		return tink_core_Outcome.Success(tink_core_Noise.Noise);
	case 1:
		var e = v.failure;
		return tink_core_Outcome.Failure("" + e.toString() + " " + Std.string(e.data));
	}
};
tink_testrunner__$Assertion_AssertionResult_$Impl_$.toBool = function(this1) {
	return tink_core_OutcomeTools.isSuccess(this1);
};
tink_testrunner__$Assertion_AssertionResult_$Impl_$.not = function(this1) {
	return !tink_core_OutcomeTools.isSuccess(this1);
};
tink_testrunner__$Assertion_AssertionResult_$Impl_$.and_ = function(a,b) {
	if(tink_core_OutcomeTools.isSuccess(a)) {
		return b;
	} else {
		return false;
	}
};
tink_testrunner__$Assertion_AssertionResult_$Impl_$.or_ = function(a,b) {
	if(!tink_core_OutcomeTools.isSuccess(a)) {
		return b;
	} else {
		return true;
	}
};
tink_testrunner__$Assertion_AssertionResult_$Impl_$._and = function(a,b) {
	if(a) {
		return tink_core_OutcomeTools.isSuccess(b);
	} else {
		return false;
	}
};
tink_testrunner__$Assertion_AssertionResult_$Impl_$._or = function(a,b) {
	if(!a) {
		return tink_core_OutcomeTools.isSuccess(b);
	} else {
		return true;
	}
};
var tink_testrunner__$Assertions_Assertions_$Impl_$ = {};
tink_testrunner__$Assertions_Assertions_$Impl_$.__name__ = "tink.testrunner._Assertions.Assertions_Impl_";
tink_testrunner__$Assertions_Assertions_$Impl_$.ofAssertion = function(o) {
	return tink_streams__$Stream_Stream_$Impl_$.ofIterator(HxOverrides.iter([o]));
};
tink_testrunner__$Assertions_Assertions_$Impl_$.ofArray = function(o) {
	return tink_streams__$Stream_Stream_$Impl_$.ofIterator(HxOverrides.iter(o));
};
tink_testrunner__$Assertions_Assertions_$Impl_$.ofPromiseArray = function(o) {
	return tink_streams__$Stream_Stream_$Impl_$.promise(tink_core__$Promise_Promise_$Impl_$.next(o,tink_core__$Promise_Next_$Impl_$.ofSafeSync(function(o1) {
		return tink_streams__$Stream_Stream_$Impl_$.ofIterator(HxOverrides.iter(o1));
	})));
};
tink_testrunner__$Assertions_Assertions_$Impl_$.ofFutureAssertion = function(p) {
	return tink_streams__$Stream_Stream_$Impl_$.promise(p.map(function(a) {
		return tink_core_Outcome.Success(tink_streams__$Stream_Stream_$Impl_$.ofIterator(HxOverrides.iter([a])));
	}).gather());
};
tink_testrunner__$Assertions_Assertions_$Impl_$.ofFutureAssertions = function(p) {
	return tink_streams__$Stream_Stream_$Impl_$.promise(p.map(tink_core_Outcome.Success).gather());
};
tink_testrunner__$Assertions_Assertions_$Impl_$.ofSurpriseAssertion = function(p) {
	return tink_streams__$Stream_Stream_$Impl_$.promise(tink_core__$Future_Future_$Impl_$._tryMap(p,function(o) {
		return tink_streams__$Stream_Stream_$Impl_$.ofIterator(HxOverrides.iter([o]));
	}));
};
tink_testrunner__$Assertions_Assertions_$Impl_$.ofOutcomeAssertions = function(o) {
	return tink_streams__$Stream_Stream_$Impl_$.promise(new tink_core__$Future_SyncFuture(new tink_core__$Lazy_LazyConst(o)));
};
tink_testrunner__$Assertions_Assertions_$Impl_$.ofPromiseAssertions = function(p) {
	return tink_streams__$Stream_Stream_$Impl_$.promise(p);
};
tink_testrunner__$Assertions_Assertions_$Impl_$.ofSurpriseAssertions = function(p) {
	return tink_streams__$Stream_Stream_$Impl_$.promise(p);
};
var tink_testrunner__$Batch_Batch_$Impl_$ = {};
tink_testrunner__$Batch_Batch_$Impl_$.__name__ = "tink.testrunner._Batch.Batch_Impl_";
tink_testrunner__$Batch_Batch_$Impl_$._new = function(suites) {
	return suites;
};
tink_testrunner__$Batch_Batch_$Impl_$.ofSuites = function(suites) {
	return suites;
};
tink_testrunner__$Batch_Batch_$Impl_$.ofSuite = function(suite) {
	return [suite];
};
tink_testrunner__$Batch_Batch_$Impl_$.ofCases = function(cases,pos) {
	var _g = [];
	var _g1 = 0;
	while(_g1 < cases.length) {
		var c = cases[_g1];
		++_g1;
		var _g11 = c == null ? null : js_Boot.getClass(c);
		var suite;
		if(_g11 == null) {
			suite = null;
		} else {
			var c1 = _g11;
			suite = c1.__name__;
		}
		_g.push(suite);
	}
	return [new tink_testrunner_BasicSuite({ name : _g.join(", "), pos : pos},cases,{ fileName : "tink/testrunner/Suite.hx", lineNumber : 36, className : "tink.testrunner._Suite.Suite_Impl_", methodName : "ofCases"})];
};
tink_testrunner__$Batch_Batch_$Impl_$.ofCase = function(caze,pos) {
	var cases = [caze];
	var _g = [];
	var _g1 = 0;
	while(_g1 < cases.length) {
		var c = cases[_g1];
		++_g1;
		var _g11 = c == null ? null : js_Boot.getClass(c);
		var suite;
		if(_g11 == null) {
			suite = null;
		} else {
			var c1 = _g11;
			suite = c1.__name__;
		}
		_g.push(suite);
	}
	return [new tink_testrunner_BasicSuite({ name : _g.join(", "), pos : pos},cases,{ fileName : "tink/testrunner/Suite.hx", lineNumber : 36, className : "tink.testrunner._Suite.Suite_Impl_", methodName : "ofCases"})];
};
tink_testrunner__$Batch_Batch_$Impl_$.get_suites = function(this1) {
	return this1;
};
var tink_testrunner__$Case_Case_$Impl_$ = {};
tink_testrunner__$Case_Case_$Impl_$.__name__ = "tink.testrunner._Case.Case_Impl_";
tink_testrunner__$Case_Case_$Impl_$.shouldRun = function(this1,includeMode) {
	if(!this1.exclude) {
		if(!(!includeMode)) {
			return this1.include;
		} else {
			return true;
		}
	} else {
		return false;
	}
};
var tink_testrunner_Reporter = function() { };
tink_testrunner_Reporter.__name__ = "tink.testrunner.Reporter";
tink_testrunner_Reporter.prototype = {
	__class__: tink_testrunner_Reporter
};
var tink_testrunner_ReportType = $hxEnums["tink.testrunner.ReportType"] = { __ename__ : true, __constructs__ : ["BatchStart","SuiteStart","CaseStart","Assertion","CaseFinish","SuiteFinish","BatchFinish"]
	,BatchStart: {_hx_index:0,__enum__:"tink.testrunner.ReportType",toString:$estr}
	,SuiteStart: ($_=function(info,hasCasesToRun) { return {_hx_index:1,info:info,hasCasesToRun:hasCasesToRun,__enum__:"tink.testrunner.ReportType",toString:$estr}; },$_.__params__ = ["info","hasCasesToRun"],$_)
	,CaseStart: ($_=function(info,shouldRun) { return {_hx_index:2,info:info,shouldRun:shouldRun,__enum__:"tink.testrunner.ReportType",toString:$estr}; },$_.__params__ = ["info","shouldRun"],$_)
	,Assertion: ($_=function(assertion) { return {_hx_index:3,assertion:assertion,__enum__:"tink.testrunner.ReportType",toString:$estr}; },$_.__params__ = ["assertion"],$_)
	,CaseFinish: ($_=function(result) { return {_hx_index:4,result:result,__enum__:"tink.testrunner.ReportType",toString:$estr}; },$_.__params__ = ["result"],$_)
	,SuiteFinish: ($_=function(result) { return {_hx_index:5,result:result,__enum__:"tink.testrunner.ReportType",toString:$estr}; },$_.__params__ = ["result"],$_)
	,BatchFinish: ($_=function(result) { return {_hx_index:6,result:result,__enum__:"tink.testrunner.ReportType",toString:$estr}; },$_.__params__ = ["result"],$_)
};
var tink_testrunner_Formatter = function() { };
tink_testrunner_Formatter.__name__ = "tink.testrunner.Formatter";
tink_testrunner_Formatter.prototype = {
	__class__: tink_testrunner_Formatter
};
var tink_testrunner_BasicFormatter = function() {
};
tink_testrunner_BasicFormatter.__name__ = "tink.testrunner.BasicFormatter";
tink_testrunner_BasicFormatter.__interfaces__ = [tink_testrunner_Formatter];
tink_testrunner_BasicFormatter.prototype = {
	success: function(v) {
		return this.color(v,"green");
	}
	,error: function(v) {
		return this.color(v,"red");
	}
	,warning: function(v) {
		return this.color(v,"yellow");
	}
	,info: function(v) {
		return this.color(v,"yellow");
	}
	,extra: function(v) {
		return this.color(v,"cyan");
	}
	,mute: function(v) {
		return this.color(v,"blue");
	}
	,normal: function(v) {
		return this.color(v,"");
	}
	,color: function(v,c) {
		return v;
	}
	,__class__: tink_testrunner_BasicFormatter
};
var tink_testrunner_AnsiFormatter = function() {
	tink_testrunner_BasicFormatter.call(this);
};
tink_testrunner_AnsiFormatter.__name__ = "tink.testrunner.AnsiFormatter";
tink_testrunner_AnsiFormatter.__super__ = tink_testrunner_BasicFormatter;
tink_testrunner_AnsiFormatter.prototype = $extend(tink_testrunner_BasicFormatter.prototype,{
	color: function(v,c) {
		switch(c) {
		case "blue":
			return ANSI.aset([Attribute.Blue]) + v + ANSI.aset([Attribute.DefaultForeground]);
		case "cyan":
			return ANSI.aset([Attribute.Cyan]) + v + ANSI.aset([Attribute.DefaultForeground]);
		case "green":
			return ANSI.aset([Attribute.Green]) + v + ANSI.aset([Attribute.DefaultForeground]);
		case "magenta":
			return ANSI.aset([Attribute.Magenta]) + v + ANSI.aset([Attribute.DefaultForeground]);
		case "red":
			return ANSI.aset([Attribute.Red]) + v + ANSI.aset([Attribute.DefaultForeground]);
		case "yellow":
			return ANSI.aset([Attribute.Yellow]) + v + ANSI.aset([Attribute.DefaultForeground]);
		default:
			return ANSI.aset([Attribute.DefaultForeground]) + v;
		}
	}
	,__class__: tink_testrunner_AnsiFormatter
});
var tink_testrunner_BasicReporter = function(formatter) {
	this.noise = new tink_core__$Future_SyncFuture(new tink_core__$Lazy_LazyConst(tink_core_Noise.Noise));
	this.formatter = formatter != null ? formatter : new tink_testrunner_BasicFormatter();
};
tink_testrunner_BasicReporter.__name__ = "tink.testrunner.BasicReporter";
tink_testrunner_BasicReporter.__interfaces__ = [tink_testrunner_Reporter];
tink_testrunner_BasicReporter.prototype = {
	report: function(type) {
		switch(type._hx_index) {
		case 0:
			break;
		case 1:
			var info = type.info;
			if(type.hasCasesToRun) {
				this.println(" ");
				var m = this.formatter.info(info.name) + ": ";
				if(info.pos != null) {
					m += this.formatter.extra("[" + info.pos.fileName + ":" + info.pos.lineNumber + "]");
				}
				this.println(m);
			}
			break;
		case 2:
			var info1 = type.info;
			if(type.shouldRun) {
				var m1 = this.formatter.info(this.indent(info1.name,2)) + ": ";
				if(info1.pos != null) {
					m1 += this.formatter.extra("[" + info1.pos.fileName + ":" + info1.pos.lineNumber + "] ");
				}
				if(info1.description != null) {
					m1 += this.formatter.mute(info1.description);
				}
				this.println(m1);
			}
			break;
		case 3:
			var assertion = type.assertion;
			var failure = null;
			var holds;
			var _g = assertion.holds;
			switch(_g._hx_index) {
			case 0:
				holds = this.formatter.success("[OK]");
				break;
			case 1:
				failure = _g.failure;
				holds = this.formatter.error("[FAIL]");
				break;
			}
			this.println(this.indent("- " + holds + " " + this.formatter.extra("[" + assertion.pos.fileName + ":" + assertion.pos.lineNumber + "]") + " " + assertion.description,4));
			if(failure != null) {
				this.println(this.formatter.error(this.indent(failure,8)));
			}
			break;
		case 4:
			var result = type.result.result;
			if(result._hx_index == 1) {
				this.println(this.formatter.error(this.indent("- " + this.formatError(result.e),4)));
			}
			break;
		case 5:
			var _g1 = type.result.result;
			switch(_g1._hx_index) {
			case 0:
				break;
			case 1:
				this.println(this.formatter.error(this.indent("Setup Failed: " + this.formatError(_g1.e),2)));
				break;
			case 2:
				this.println(this.formatter.error(this.indent("Teardown Failed: " + this.formatError(_g1.e),2)));
				break;
			}
			break;
		case 6:
			var summary = tink_testrunner__$Runner_BatchResult_$Impl_$.summary(type.result);
			var total = summary.assertions.length;
			var failures = 0;
			var errors = 0;
			var _g2 = 0;
			var _g11 = summary.failures;
			while(_g2 < _g11.length) if(_g11[_g2++]._hx_index == 0) {
				++failures;
			} else {
				++errors;
			}
			var success = total - failures;
			var m_b = "";
			m_b = "" + (total == null ? "null" : "" + total);
			m_b += " Assertion";
			if(total > 1) {
				m_b += "s";
			}
			m_b += "   ";
			m_b += success == null ? "null" : "" + success;
			m_b += " Success";
			m_b += "   ";
			m_b += failures == null ? "null" : "" + failures;
			m_b += " Failure";
			if(failures > 1) {
				m_b += "s";
			}
			m_b += "   ";
			m_b += errors == null ? "null" : "" + errors;
			m_b += " Error";
			if(errors > 1) {
				m_b += "s";
			}
			var m2 = m_b += "   ";
			this.println(" ");
			this.println(failures == 0 && errors == 0 ? this.formatter.success(m2) : this.formatter.error(m2));
			this.println(" ");
			break;
		}
		return this.noise;
	}
	,println: function(v) {
		window.console.log(v);
	}
	,indent: function(v,i) {
		if(i == null) {
			i = 0;
		}
		return v.split("\n").map(function(line) {
			return StringTools.lpad(""," ",i) + line;
		}).join("\n");
	}
	,formatError: function(e) {
		var str = e.toString();
		if(e.data != null) {
			str += "\n" + Std.string(e.data);
		}
		return str;
	}
	,__class__: tink_testrunner_BasicReporter
};
var tink_testrunner_Runner = function() { };
tink_testrunner_Runner.__name__ = "tink.testrunner.Runner";
tink_testrunner_Runner.exit = function(result) {
	throw new js__$Boot_HaxeError("not supported");
};
tink_testrunner_Runner.run = function(batch,reporter,timers) {
	if(reporter == null) {
		reporter = new tink_testrunner_BasicReporter();
	}
	if(timers == null) {
		timers = new tink_testrunner_HaxeTimerManager();
	}
	var includeMode = false;
	var _g = 0;
	var _g1 = batch;
	while(_g < _g1.length) {
		var s = _g1[_g++];
		if(includeMode) {
			break;
		}
		var _g2 = 0;
		var _g11 = s.cases;
		while(_g2 < _g11.length) if(_g11[_g2++].include) {
			includeMode = true;
			break;
		}
	}
	return tink_core__$Future_Future_$Impl_$.async(function(cb) {
		reporter.report(tink_testrunner_ReportType.BatchStart).handle(function(_) {
			var iter = HxOverrides.iter(batch);
			var results = [];
			var next = null;
			next = function() {
				if(iter.hasNext()) {
					tink_testrunner_Runner.runSuite(iter.next(),reporter,timers,includeMode).handle(function(o) {
						results.push(o);
						reporter.report(tink_testrunner_ReportType.SuiteFinish(o)).handle(tink_core__$Callback_Callback_$Impl_$.fromNiladic(next));
					});
				} else {
					var f = cb;
					var a1 = results;
					var next1 = function() {
						f(a1);
					};
					reporter.report(tink_testrunner_ReportType.BatchFinish(results)).handle(tink_core__$Callback_Callback_$Impl_$.fromNiladic(next1));
				}
			};
			next();
		});
	});
};
tink_testrunner_Runner.runSuite = function(suite,reporter,timers,includeMode) {
	return tink_core__$Future_Future_$Impl_$.async(function(cb) {
		var hasCases = tink_testrunner__$Suite_Suite_$Impl_$.getCasesToBeRun(suite,includeMode).length > 0;
		reporter.report(tink_testrunner_ReportType.SuiteStart(suite.info,hasCases)).handle(function(_) {
			var setup = function() {
				if(hasCases) {
					return suite.setup();
				} else {
					return tink_core__$Promise_Promise_$Impl_$.NOISE;
				}
			};
			var teardown = function() {
				if(hasCases) {
					return suite.teardown();
				} else {
					return tink_core__$Promise_Promise_$Impl_$.NOISE;
				}
			};
			var iter = HxOverrides.iter(suite.cases);
			var results = [];
			var next = null;
			next = function() {
				if(iter.hasNext()) {
					var caze = iter.next();
					tink_testrunner_Runner.runCase(caze,suite,reporter,timers,tink_testrunner__$Case_Case_$Impl_$.shouldRun(caze,includeMode)).handle(function(r) {
						results.push(r);
						next();
					});
				} else {
					teardown().handle(function(o) {
						var next1;
						switch(o._hx_index) {
						case 0:
							next1 = tink_testrunner_SuiteResultType.Success(results);
							break;
						case 1:
							next1 = tink_testrunner_SuiteResultType.TeardownFailed(o.failure,results);
							break;
						}
						cb({ info : suite.info, result : next1});
					});
				}
			};
			setup().handle(function(o1) {
				switch(o1._hx_index) {
				case 0:
					next();
					break;
				case 1:
					cb({ info : suite.info, result : tink_testrunner_SuiteResultType.SetupFailed(o1.failure)});
					break;
				}
			});
		});
	});
};
tink_testrunner_Runner.runCase = function(caze,suite,reporter,timers,shouldRun) {
	return tink_core__$Future_Future_$Impl_$.async(function(cb) {
		if(shouldRun) {
			reporter.report(tink_testrunner_ReportType.CaseStart(caze.info,shouldRun)).handle(function(_) {
				tink_core__$Promise_Promise_$Impl_$.next(tink_core__$Promise_Promise_$Impl_$.next(tink_testrunner_TimeoutHelper.timeout(suite.before(),caze.timeout,timers,caze.pos),function(_1) {
					var assertions = [];
					return tink_testrunner_TimeoutHelper.timeout(tink_core__$Future_Future_$Impl_$.next(caze.execute().forEach(tink_streams__$Stream_Handler_$Impl_$.ofSafe(function(a) {
						assertions.push(a);
						return reporter.report(tink_testrunner_ReportType.Assertion(a)).map(function(_2) {
							return tink_streams_Handled.Resume;
						}).gather();
					})),tink_core__$Promise_Next_$Impl_$.ofSafe(function(o) {
						switch(o._hx_index) {
						case 0:
							throw new js__$Boot_HaxeError("unreachable");
						case 2:
							return tink_core_Outcome.Failure(o.error);
						case 3:
							return tink_core_Outcome.Success(assertions);
						}
					})),caze.timeout,timers,{ fileName : "tink/testrunner/Runner.hx", lineNumber : 107, className : "tink.testrunner.Runner", methodName : "runCase"});
				}),function(result) {
					return tink_core__$Promise_Promise_$Impl_$.next(tink_testrunner_TimeoutHelper.timeout(suite.after(),caze.timeout,timers,caze.pos),function(_3) {
						return new tink_core__$Future_SyncFuture(new tink_core__$Lazy_LazyConst(tink_core_Outcome.Success(result)));
					});
				}).handle(function(result1) {
					var results;
					switch(result1._hx_index) {
					case 0:
						results = tink_testrunner_CaseResultType.Succeeded(result1.data);
						break;
					case 1:
						results = tink_testrunner_CaseResultType.Failed(result1.failure);
						break;
					}
					var results1 = { info : caze.info, result : results};
					reporter.report(tink_testrunner_ReportType.CaseFinish(results1)).handle(function(_4) {
						cb(results1);
					});
				});
			});
		} else {
			reporter.report(tink_testrunner_ReportType.CaseStart(caze.info,shouldRun)).handle(function(_5) {
				var results2 = { info : caze.info, result : tink_testrunner_CaseResultType.Excluded};
				reporter.report(tink_testrunner_ReportType.CaseFinish(results2)).handle(function(_6) {
					cb(results2);
				});
			});
		}
	});
};
var tink_testrunner_TimeoutHelper = function() { };
tink_testrunner_TimeoutHelper.__name__ = "tink.testrunner.TimeoutHelper";
tink_testrunner_TimeoutHelper.timeout = function(promise,ms,timers,pos) {
	return tink_core__$Future_Future_$Impl_$.async(function(cb) {
		var done = false;
		var timer = null;
		var link = promise.handle(function(o) {
			done = true;
			if(timer != null) {
				timer.stop();
			}
			cb(o);
		});
		if(!done && timers != null) {
			timer = timers.schedule(ms,function() {
				if(link != null) {
					link.cancel();
				}
				cb(tink_core_Outcome.Failure(new tink_core_TypedError(null,"Timed out after " + ms + " ms",pos)));
			});
		}
	});
};
var tink_testrunner__$Runner_BatchResult_$Impl_$ = {};
tink_testrunner__$Runner_BatchResult_$Impl_$.__name__ = "tink.testrunner._Runner.BatchResult_Impl_";
tink_testrunner__$Runner_BatchResult_$Impl_$.summary = function(this1) {
	var ret = { assertions : [], failures : []};
	var handleCases = function(cases) {
		var _g = 0;
		while(_g < cases.length) {
			var _g1 = cases[_g++].result;
			switch(_g1._hx_index) {
			case 0:
				var assertions = _g1.assertions;
				ret.assertions = ret.assertions.concat(assertions);
				var ret1 = ret.failures;
				var handleCases1 = assertions.filter(function(a) {
					return !tink_core_OutcomeTools.isSuccess(a.holds);
				}).map(function(a1) {
					return tink_testrunner_FailureType.AssertionFailed(a1);
				});
				ret.failures = ret1.concat(handleCases1);
				break;
			case 1:
				ret.failures.push(tink_testrunner_FailureType.CaseFailed(_g1.e));
				break;
			case 2:
				break;
			}
		}
	};
	var _g2 = 0;
	while(_g2 < this1.length) {
		var _g3 = this1[_g2++].result;
		switch(_g3._hx_index) {
		case 0:
			handleCases(_g3.cases);
			break;
		case 1:
			ret.failures.push(tink_testrunner_FailureType.SuiteFailed(_g3.e));
			break;
		case 2:
			handleCases(_g3.cases);
			ret.failures.push(tink_testrunner_FailureType.SuiteFailed(_g3.e));
			break;
		}
	}
	return ret;
};
var tink_testrunner_SuiteResultType = $hxEnums["tink.testrunner.SuiteResultType"] = { __ename__ : true, __constructs__ : ["Success","SetupFailed","TeardownFailed"]
	,Success: ($_=function(cases) { return {_hx_index:0,cases:cases,__enum__:"tink.testrunner.SuiteResultType",toString:$estr}; },$_.__params__ = ["cases"],$_)
	,SetupFailed: ($_=function(e) { return {_hx_index:1,e:e,__enum__:"tink.testrunner.SuiteResultType",toString:$estr}; },$_.__params__ = ["e"],$_)
	,TeardownFailed: ($_=function(e,cases) { return {_hx_index:2,e:e,cases:cases,__enum__:"tink.testrunner.SuiteResultType",toString:$estr}; },$_.__params__ = ["e","cases"],$_)
};
var tink_testrunner_CaseResultType = $hxEnums["tink.testrunner.CaseResultType"] = { __ename__ : true, __constructs__ : ["Succeeded","Failed","Excluded"]
	,Succeeded: ($_=function(assertions) { return {_hx_index:0,assertions:assertions,__enum__:"tink.testrunner.CaseResultType",toString:$estr}; },$_.__params__ = ["assertions"],$_)
	,Failed: ($_=function(e) { return {_hx_index:1,e:e,__enum__:"tink.testrunner.CaseResultType",toString:$estr}; },$_.__params__ = ["e"],$_)
	,Excluded: {_hx_index:2,__enum__:"tink.testrunner.CaseResultType",toString:$estr}
};
var tink_testrunner_FailureType = $hxEnums["tink.testrunner.FailureType"] = { __ename__ : true, __constructs__ : ["AssertionFailed","CaseFailed","SuiteFailed"]
	,AssertionFailed: ($_=function(assertion) { return {_hx_index:0,assertion:assertion,__enum__:"tink.testrunner.FailureType",toString:$estr}; },$_.__params__ = ["assertion"],$_)
	,CaseFailed: ($_=function(err) { return {_hx_index:1,err:err,__enum__:"tink.testrunner.FailureType",toString:$estr}; },$_.__params__ = ["err"],$_)
	,SuiteFailed: ($_=function(err) { return {_hx_index:2,err:err,__enum__:"tink.testrunner.FailureType",toString:$estr}; },$_.__params__ = ["err"],$_)
};
var tink_testrunner__$Suite_Suite_$Impl_$ = {};
tink_testrunner__$Suite_Suite_$Impl_$.__name__ = "tink.testrunner._Suite.Suite_Impl_";
tink_testrunner__$Suite_Suite_$Impl_$.ofCases = function(cases,pos) {
	var _g = [];
	var _g1 = 0;
	while(_g1 < cases.length) {
		var c = cases[_g1];
		++_g1;
		var _g11 = c == null ? null : js_Boot.getClass(c);
		var tmp;
		if(_g11 == null) {
			tmp = null;
		} else {
			var c1 = _g11;
			tmp = c1.__name__;
		}
		_g.push(tmp);
	}
	return new tink_testrunner_BasicSuite({ name : _g.join(", "), pos : pos},cases,{ fileName : "tink/testrunner/Suite.hx", lineNumber : 36, className : "tink.testrunner._Suite.Suite_Impl_", methodName : "ofCases"});
};
tink_testrunner__$Suite_Suite_$Impl_$.ofCase = function(caze,pos) {
	var cases = [caze];
	var _g = [];
	var _g1 = 0;
	while(_g1 < cases.length) {
		var c = cases[_g1];
		++_g1;
		var _g11 = c == null ? null : js_Boot.getClass(c);
		var tmp;
		if(_g11 == null) {
			tmp = null;
		} else {
			var c1 = _g11;
			tmp = c1.__name__;
		}
		_g.push(tmp);
	}
	return new tink_testrunner_BasicSuite({ name : _g.join(", "), pos : pos},cases,{ fileName : "tink/testrunner/Suite.hx", lineNumber : 36, className : "tink.testrunner._Suite.Suite_Impl_", methodName : "ofCases"});
};
tink_testrunner__$Suite_Suite_$Impl_$.getCasesToBeRun = function(this1,includeMode) {
	return this1.cases.filter(function(c) {
		return tink_testrunner__$Case_Case_$Impl_$.shouldRun(c,includeMode);
	});
};
var tink_testrunner_Timer = function() { };
tink_testrunner_Timer.__name__ = "tink.testrunner.Timer";
tink_testrunner_Timer.prototype = {
	__class__: tink_testrunner_Timer
};
var tink_testrunner_TimerManager = function() { };
tink_testrunner_TimerManager.__name__ = "tink.testrunner.TimerManager";
tink_testrunner_TimerManager.prototype = {
	__class__: tink_testrunner_TimerManager
};
var tink_testrunner_HaxeTimer = function(ms,f) {
	this.timer = haxe_Timer.delay(f,ms);
};
tink_testrunner_HaxeTimer.__name__ = "tink.testrunner.HaxeTimer";
tink_testrunner_HaxeTimer.__interfaces__ = [tink_testrunner_Timer];
tink_testrunner_HaxeTimer.prototype = {
	stop: function() {
		if(this.timer != null) {
			this.timer.stop();
			this.timer = null;
		}
	}
	,__class__: tink_testrunner_HaxeTimer
};
var tink_testrunner_HaxeTimerManager = function() {
};
tink_testrunner_HaxeTimerManager.__name__ = "tink.testrunner.HaxeTimerManager";
tink_testrunner_HaxeTimerManager.__interfaces__ = [tink_testrunner_TimerManager];
tink_testrunner_HaxeTimerManager.prototype = {
	schedule: function(ms,f) {
		return new tink_testrunner_HaxeTimer(ms,f);
	}
	,__class__: tink_testrunner_HaxeTimerManager
};
function $getIterator(o) { if( o instanceof Array ) return HxOverrides.iter(o); else return o.iterator(); }
var $fid = 0;
function $bind(o,m) { if( m == null ) return null; if( m.__id__ == null ) m.__id__ = $fid++; var f; if( o.hx__closures__ == null ) o.hx__closures__ = {}; else f = o.hx__closures__[m.__id__]; if( f == null ) { f = m.bind(o); o.hx__closures__[m.__id__] = f; } return f; }
js_Boot.__toStr = ({ }).toString;
String.prototype.__class__ = String;
String.__name__ = "String";
Array.__name__ = "Array";
var Int = { };
var Dynamic = { };
var Float = Number;
var Bool = Boolean;
var Class = { };
var Enum = { };
global.window = {console:console}
haxe_ds_ObjectMap.count = 0;
var __map_reserved = {};
Object.defineProperty(js__$Boot_HaxeError.prototype,"message",{ get : function() {
	return String(this.val);
}});
ANSI.ESCAPE = "\x1B";
ANSI.BELL = "\x07";
ANSI.CSI = "\x1B" + "[";
ANSI.attr = Attribute;
ANSI.values = (function($this) {
	var $r;
	var _g = new haxe_ds_EnumValueMap();
	_g.set(Attribute.Off,0);
	_g.set(Attribute.Bold,1);
	_g.set(Attribute.Underline,4);
	_g.set(Attribute.Blink,5);
	_g.set(Attribute.ReverseVideo,7);
	_g.set(Attribute.Concealed,8);
	_g.set(Attribute.BoldOff,22);
	_g.set(Attribute.UnderlineOff,24);
	_g.set(Attribute.BlinkOff,25);
	_g.set(Attribute.NormalVideo,27);
	_g.set(Attribute.ConcealedOff,28);
	_g.set(Attribute.Black,30);
	_g.set(Attribute.Red,31);
	_g.set(Attribute.Green,32);
	_g.set(Attribute.Yellow,33);
	_g.set(Attribute.Blue,34);
	_g.set(Attribute.Magenta,35);
	_g.set(Attribute.Cyan,36);
	_g.set(Attribute.White,37);
	_g.set(Attribute.DefaultForeground,39);
	_g.set(Attribute.BlackBack,40);
	_g.set(Attribute.RedBack,41);
	_g.set(Attribute.GreenBack,42);
	_g.set(Attribute.YellowBack,43);
	_g.set(Attribute.BlueBack,44);
	_g.set(Attribute.MagentaBack,45);
	_g.set(Attribute.CyanBack,46);
	_g.set(Attribute.WhiteBack,47);
	_g.set(Attribute.DefaultBackground,49);
	$r = _g;
	return $r;
}(this));
ANSI.set = Reflect.makeVarArgs(ANSI.aset);
ANSI.available = ANSI.detectSupport();
ANSI.strip = false;
ANSI.stripIfUnavailable = true;
ANSI.sequences = (function($this) {
	var $r;
	var _g = new haxe_ds_StringMap();
	{
		var value = { val : "\x1B" + "[" + "J", doc : "Erase from cursor to the end of display."};
		if(__map_reserved["eraseDisplayToEnd"] != null) {
			_g.setReserved("eraseDisplayToEnd",value);
		} else {
			_g.h["eraseDisplayToEnd"] = value;
		}
	}
	{
		var value1 = { val : "\x1B" + "[" + "1J", doc : "Erase from the start of diplay to cursor (inclusive)."};
		if(__map_reserved["eraseDisplayToCursor"] != null) {
			_g.setReserved("eraseDisplayToCursor",value1);
		} else {
			_g.h["eraseDisplayToCursor"] = value1;
		}
	}
	{
		var value2 = { val : "\x1B" + "[" + "2J", doc : "Erase display and move cursor to the top-left."};
		if(__map_reserved["eraseDisplay"] != null) {
			_g.setReserved("eraseDisplay",value2);
		} else {
			_g.h["eraseDisplay"] = value2;
		}
	}
	{
		var value3 = { val : "\x1B" + "[" + "K", doc : "Erase from cursor to the end of line."};
		if(__map_reserved["eraseLineToEnd"] != null) {
			_g.setReserved("eraseLineToEnd",value3);
		} else {
			_g.h["eraseLineToEnd"] = value3;
		}
	}
	{
		var value4 = { val : "\x1B" + "[" + "1K", doc : "Erase from the start of line to cursor (inclusive)."};
		if(__map_reserved["eraseLineToCursor"] != null) {
			_g.setReserved("eraseLineToCursor",value4);
		} else {
			_g.h["eraseLineToCursor"] = value4;
		}
	}
	{
		var value5 = { val : "\x1B" + "[" + "2K", doc : "Erase line."};
		if(__map_reserved["eraseLine"] != null) {
			_g.setReserved("eraseLine",value5);
		} else {
			_g.h["eraseLine"] = value5;
		}
	}
	{
		var value6 = { val : "\x1B" + "[" + "X", doc : "Erase one character."};
		if(__map_reserved["eraseChar"] != null) {
			_g.setReserved("eraseChar",value6);
		} else {
			_g.h["eraseChar"] = value6;
		}
	}
	{
		var value7 = { val : "\x1B" + "[" + "#X", doc : "Erase # characters."};
		if(__map_reserved["eraseChars"] != null) {
			_g.setReserved("eraseChars",value7);
		} else {
			_g.h["eraseChars"] = value7;
		}
	}
	{
		var value8 = { val : "\x1B" + "[" + "L", doc : "Insert one blank line."};
		if(__map_reserved["insertLine"] != null) {
			_g.setReserved("insertLine",value8);
		} else {
			_g.h["insertLine"] = value8;
		}
	}
	{
		var value9 = { val : "\x1B" + "[" + "#L", doc : "Insert # blank lines."};
		if(__map_reserved["insertLines"] != null) {
			_g.setReserved("insertLines",value9);
		} else {
			_g.h["insertLines"] = value9;
		}
	}
	{
		var value10 = { val : "\x1B" + "[" + "M", doc : "Delete one line."};
		if(__map_reserved["deleteLine"] != null) {
			_g.setReserved("deleteLine",value10);
		} else {
			_g.h["deleteLine"] = value10;
		}
	}
	{
		var value11 = { val : "\x1B" + "[" + "#M", doc : "Delete # lines."};
		if(__map_reserved["deleteLines"] != null) {
			_g.setReserved("deleteLines",value11);
		} else {
			_g.h["deleteLines"] = value11;
		}
	}
	{
		var value12 = { val : "\x1B" + "[" + "P", doc : "Delete one character."};
		if(__map_reserved["deleteChar"] != null) {
			_g.setReserved("deleteChar",value12);
		} else {
			_g.h["deleteChar"] = value12;
		}
	}
	{
		var value13 = { val : "\x1B" + "[" + "#P", doc : "Delete # characters."};
		if(__map_reserved["deleteChars"] != null) {
			_g.setReserved("deleteChars",value13);
		} else {
			_g.h["deleteChars"] = value13;
		}
	}
	{
		var value14 = { val : "\x1B" + "[" + "@", doc : "Insert one blank character."};
		if(__map_reserved["insertChar"] != null) {
			_g.setReserved("insertChar",value14);
		} else {
			_g.h["insertChar"] = value14;
		}
	}
	{
		var value15 = { val : "\x1B" + "[" + "#@", doc : "Insert # blank characters."};
		if(__map_reserved["insertChars"] != null) {
			_g.setReserved("insertChars",value15);
		} else {
			_g.h["insertChars"] = value15;
		}
	}
	{
		var value16 = { val : "\x1B" + "[" + "#A", doc : "Move cursor up # lines."};
		if(__map_reserved["moveUp"] != null) {
			_g.setReserved("moveUp",value16);
		} else {
			_g.h["moveUp"] = value16;
		}
	}
	{
		var value17 = { val : "\x1B" + "[" + "#B", doc : "Move cursor down # lines."};
		if(__map_reserved["moveDown"] != null) {
			_g.setReserved("moveDown",value17);
		} else {
			_g.h["moveDown"] = value17;
		}
	}
	{
		var value18 = { val : "\x1B" + "[" + "#C", doc : "Move cursor right # characters."};
		if(__map_reserved["moveRight"] != null) {
			_g.setReserved("moveRight",value18);
		} else {
			_g.h["moveRight"] = value18;
		}
	}
	{
		var value19 = { val : "\x1B" + "[" + "#D", doc : "Move cursor left # characters."};
		if(__map_reserved["moveLeft"] != null) {
			_g.setReserved("moveLeft",value19);
		} else {
			_g.h["moveLeft"] = value19;
		}
	}
	{
		var value20 = { val : "\x1B" + "[" + "#E", doc : "Move cursor down # lines and to first column."};
		if(__map_reserved["moveDownReset"] != null) {
			_g.setReserved("moveDownReset",value20);
		} else {
			_g.h["moveDownReset"] = value20;
		}
	}
	{
		var value21 = { val : "\x1B" + "[" + "#F", doc : "Move cursor up # lines and to first column."};
		if(__map_reserved["moveUpReset"] != null) {
			_g.setReserved("moveUpReset",value21);
		} else {
			_g.h["moveUpReset"] = value21;
		}
	}
	{
		var value22 = { val : "\x1B" + "[" + "#G", doc : "Move cursor to column #."};
		if(__map_reserved["setX"] != null) {
			_g.setReserved("setX",value22);
		} else {
			_g.h["setX"] = value22;
		}
	}
	{
		var value23 = { val : "\x1B" + "[" + "#d", doc : "Move cursor to line #."};
		if(__map_reserved["setY"] != null) {
			_g.setReserved("setY",value23);
		} else {
			_g.h["setY"] = value23;
		}
	}
	{
		var value24 = { val : "\x1B" + "[" + "H", doc : "Move cursor to top-left."};
		if(__map_reserved["reset"] != null) {
			_g.setReserved("reset",value24);
		} else {
			_g.h["reset"] = value24;
		}
	}
	{
		var value25 = { val : "\x1B" + "[" + "#H", doc : "Move cursor to line # and first column."};
		if(__map_reserved["resetY"] != null) {
			_g.setReserved("resetY",value25);
		} else {
			_g.h["resetY"] = value25;
		}
	}
	{
		var value26 = { val : "\x1B" + "[" + "#;#H", doc : "Move cursor to line #, column #.", params : [{ index : 1, name : "column"},{ index : 0, name : "line"}]};
		if(__map_reserved["setXY"] != null) {
			_g.setReserved("setXY",value26);
		} else {
			_g.h["setXY"] = value26;
		}
	}
	{
		var value27 = { val : "\x1B" + "[" + "s", doc : "Save cursor position."};
		if(__map_reserved["saveCursor"] != null) {
			_g.setReserved("saveCursor",value27);
		} else {
			_g.h["saveCursor"] = value27;
		}
	}
	{
		var value28 = { val : "\x1B" + "[" + "u", doc : "Move cursor to saved position."};
		if(__map_reserved["loadCursor"] != null) {
			_g.setReserved("loadCursor",value28);
		} else {
			_g.h["loadCursor"] = value28;
		}
	}
	{
		var value29 = { val : "\x1B" + "[" + "?25h", doc : "Show cursor."};
		if(__map_reserved["showCursor"] != null) {
			_g.setReserved("showCursor",value29);
		} else {
			_g.h["showCursor"] = value29;
		}
	}
	{
		var value30 = { val : "\x1B" + "[" + "?25l", doc : "Hide cursor."};
		if(__map_reserved["hideCursor"] != null) {
			_g.setReserved("hideCursor",value30);
		} else {
			_g.h["hideCursor"] = value30;
		}
	}
	$r = _g;
	return $r;
}(this));
tink_core__$Callback_Callback_$Impl_$.depth = 0;
tink_core__$Callback_Callback_$Impl_$.MAX_DEPTH = 1000;
tink_core__$Future_NeverFuture.inst = new tink_core__$Future_NeverFuture();
tink_core__$Future_Future_$Impl_$.NULL = new tink_core__$Future_SyncFuture(new tink_core__$Lazy_LazyConst(null));
tink_core__$Future_Future_$Impl_$.NOISE = new tink_core__$Future_SyncFuture(new tink_core__$Lazy_LazyConst(tink_core_Noise.Noise));
tink_core__$Future_Future_$Impl_$.NEVER = new tink_core__$Future_SyncFuture(new tink_core__$Lazy_LazyConst(tink_core__$Future_NeverFuture.inst));
tink_core__$Promise_Promise_$Impl_$.NULL = new tink_core__$Future_SyncFuture(new tink_core__$Lazy_LazyConst(tink_core_Outcome.Success(null)));
tink_core__$Promise_Promise_$Impl_$.NOISE = new tink_core__$Future_SyncFuture(new tink_core__$Lazy_LazyConst(tink_core_Outcome.Success(tink_core_Noise.Noise)));
tink_core__$Promise_Promise_$Impl_$.NEVER = tink_core__$Future_Future_$Impl_$.NEVER.map(tink_core_Outcome.Success).gather();
tink_streams_Empty.inst = new tink_streams_Empty();
Main.main();
})(typeof window != "undefined" ? window : typeof global != "undefined" ? global : typeof self != "undefined" ? self : this);
